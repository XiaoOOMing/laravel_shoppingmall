/*
Navicat MySQL Data Transfer

Source Server         : 本地php
Source Server Version : 50553
Source Host           : localhost:3306
Source Database       : bookstore

Target Server Type    : MYSQL
Target Server Version : 50553
File Encoding         : 65001

Date: 2018-08-15 15:35:13
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for car
-- ----------------------------
DROP TABLE IF EXISTS `car`;
CREATE TABLE `car` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `member_id` int(10) unsigned DEFAULT NULL,
  `product_id` int(10) unsigned DEFAULT NULL,
  `count` int(10) unsigned DEFAULT NULL,
  `checked` tinyint(3) unsigned NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=28 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of car
-- ----------------------------
INSERT INTO `car` VALUES ('1', '2', '2', '1', '0');
INSERT INTO `car` VALUES ('2', '2', '1', '3', '0');
INSERT INTO `car` VALUES ('3', '2', '4', '1', '0');
INSERT INTO `car` VALUES ('4', '2', '3', '1', '0');
INSERT INTO `car` VALUES ('9', '8', '1', '2', '1');

-- ----------------------------
-- Table structure for categorys
-- ----------------------------
DROP TABLE IF EXISTS `categorys`;
CREATE TABLE `categorys` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL DEFAULT '',
  `pid` int(10) unsigned NOT NULL DEFAULT '0',
  `order_no` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '排序',
  `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of categorys
-- ----------------------------
INSERT INTO `categorys` VALUES ('1', 'PHP', '0', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `categorys` VALUES ('2', 'Java', '0', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `categorys` VALUES ('3', 'Javascript', '0', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `categorys` VALUES ('4', 'ThinkPHP', '1', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `categorys` VALUES ('5', 'YII', '1', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `categorys` VALUES ('6', 'Zend', '1', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `categorys` VALUES ('7', 'SpringMVC', '2', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `categorys` VALUES ('8', 'Node.js', '3', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `categorys` VALUES ('9', 'Vue.js', '3', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `categorys` VALUES ('10', 'React.js', '3', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `categorys` VALUES ('11', 'Laravel', '1', '0', '0000-00-00 00:00:00', '0000-00-00 00:00:00');

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `member_id` int(10) unsigned NOT NULL,
  `product_id` int(10) unsigned NOT NULL,
  `content` varchar(255) NOT NULL DEFAULT '',
  `score` int(10) unsigned NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES ('1', '6', '1', 'Hello world', '100', '2018-08-15 15:17:59', '2018-08-15 15:17:59');
INSERT INTO `comment` VALUES ('2', '6', '3', '123', '100', '2018-08-15 15:18:37', '2018-08-15 15:18:37');
INSERT INTO `comment` VALUES ('3', '6', '2', '111', '60', '2018-08-15 15:21:19', '2018-08-15 15:21:19');
INSERT INTO `comment` VALUES ('4', '6', '4', '111', '100', '2018-08-15 15:21:42', '2018-08-15 15:21:42');
INSERT INTO `comment` VALUES ('5', '6', '1', '2213213', '100', '2018-08-15 15:23:10', '2018-08-15 15:23:10');
INSERT INTO `comment` VALUES ('6', '6', '1', '123', '100', '2018-08-15 15:26:35', '2018-08-15 15:26:35');
INSERT INTO `comment` VALUES ('7', '6', '2', '1123', '100', '2018-08-15 15:26:38', '2018-08-15 15:26:38');
INSERT INTO `comment` VALUES ('8', '6', '1', 'xxx', '100', '2018-08-15 15:27:27', '2018-08-15 15:27:27');
INSERT INTO `comment` VALUES ('9', '6', '1', '222333', '100', '2018-08-15 15:33:01', '2018-08-15 15:33:01');
INSERT INTO `comment` VALUES ('10', '6', '3', 'hahaha', '88', '2018-08-15 15:33:54', '2018-08-15 15:33:54');

-- ----------------------------
-- Table structure for members
-- ----------------------------
DROP TABLE IF EXISTS `members`;
CREATE TABLE `members` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(50) DEFAULT NULL,
  `password` varchar(100) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of members
-- ----------------------------
INSERT INTO `members` VALUES ('1', '364216899@qq.com', 'e10adc3949ba59abbe56e057f20f883e', '364216899@qq.com', '2018-08-14 06:18:21', '2018-08-14 06:18:21');
INSERT INTO `members` VALUES ('2', '13261675306@163.com', 'e10adc3949ba59abbe56e057f20f883e', '13261675306@163.com', '2018-08-14 06:56:52', '2018-08-14 06:56:52');
INSERT INTO `members` VALUES ('3', '13261675306@126.com', 'e10adc3949ba59abbe56e057f20f883e', '13261675306@126.com', '2018-08-14 06:58:18', '2018-08-14 06:58:18');
INSERT INTO `members` VALUES ('4', '13261675306@vip.com', 'e10adc3949ba59abbe56e057f20f883e', '13261675306@vip.com', '2018-08-14 06:58:42', '2018-08-14 06:58:42');
INSERT INTO `members` VALUES ('5', '13261675306@bb.com', 'e10adc3949ba59abbe56e057f20f883e', '13261675306@bb.com', '2018-08-14 06:59:09', '2018-08-14 06:59:09');
INSERT INTO `members` VALUES ('6', '111', '698d51a19d8a121ce581499d7b701668', '111', '2018-08-14 06:59:30', '2018-08-14 06:59:30');
INSERT INTO `members` VALUES ('7', '222', 'bcbe3365e6ac95ea2c0343a2395834dd', '222', '2018-08-14 06:59:54', '2018-08-14 06:59:54');
INSERT INTO `members` VALUES ('8', 'qqq', 'b2ca678b4c936f905fb82f2733f5297f', 'qqq', '2018-08-14 09:26:19', '2018-08-14 09:26:19');
INSERT INTO `members` VALUES ('9', '777', 'f1c1592588411002af340cbaedd6fc33', '777', '2018-08-15 00:59:41', '2018-08-15 00:59:41');

-- ----------------------------
-- Table structure for order
-- ----------------------------
DROP TABLE IF EXISTS `order`;
CREATE TABLE `order` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `order_no` varchar(100) NOT NULL COMMENT '订单编号',
  `member_id` int(10) unsigned NOT NULL,
  `price` int(10) unsigned NOT NULL,
  `status` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`id`),
  UNIQUE KEY `order_no` (`order_no`)
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of order
-- ----------------------------
INSERT INTO `order` VALUES ('1', 'a768dc56b3b41885baf194cbe1a2b1a2', '6', '7690', '1', '2018-08-15 01:53:26', '2018-08-15 12:06:46');
INSERT INTO `order` VALUES ('2', '93eb9e46a699cd24ab5f4e6f3cf70ba8', '6', '11760', '1', '2018-08-15 01:53:43', '2018-08-15 12:06:51');
INSERT INTO `order` VALUES ('3', 'ef04a62f56a7db8b7f67f7cbafe3fbd8', '6', '29670', '1', '2018-08-15 01:55:55', '2018-08-15 12:07:01');
INSERT INTO `order` VALUES ('11', '38659f740014f949c879d46c836e8de1', '6', '23220', '4', '2018-08-15 15:24:11', '2018-08-15 15:26:38');
INSERT INTO `order` VALUES ('10', '3eb49a3aa38a69afbba330f4ee231fb7', '6', '7840', '4', '2018-08-15 13:28:12', '2018-08-15 15:23:10');
INSERT INTO `order` VALUES ('6', 'a3857273329a34b91f7c13173db214ba', '6', '9890', '4', '2018-08-15 01:58:32', '2018-08-15 15:33:54');
INSERT INTO `order` VALUES ('7', '4fdab8e71332fd124118f99103815aae', '6', '9890', '1', '2018-08-15 09:59:26', '2018-08-15 13:12:46');
INSERT INTO `order` VALUES ('8', '009fd140219f3496bd34ad6701edc210', '6', '31240', '4', '2018-08-15 10:53:09', '2018-08-15 15:21:42');
INSERT INTO `order` VALUES ('9', 'a4e13e1a25a3d368f091236e26dfa77b', '6', '3920', '4', '2018-08-15 13:13:43', '2018-08-15 15:33:01');
INSERT INTO `order` VALUES ('12', '3fc346ec7537c1d5887ee0156b215a09', '6', '3920', '4', '2018-08-15 15:27:07', '2018-08-15 15:27:27');

-- ----------------------------
-- Table structure for order_item
-- ----------------------------
DROP TABLE IF EXISTS `order_item`;
CREATE TABLE `order_item` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `product_id` int(10) unsigned NOT NULL,
  `order_id` int(10) unsigned NOT NULL,
  `product_info` text NOT NULL,
  `count` int(10) unsigned NOT NULL,
  `status` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '0未评价 1 评价',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of order_item
-- ----------------------------
INSERT INTO `order_item` VALUES ('1', '2', '1', '{\"name\":\"\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u5f00\\u53d1\\uff1a\\u4ece\\u96f6\\u57fa\\u7840\\u5230ThinkPHP5\\u9ad8\\u6027\\u80fd\\u6846\\u67b6\\u5b9e\\u8df5\",\"summary\":\"\\u5fae\\u4fe1\\u662f\\u65f6\\u4e0b\\u70ed\\u95e8\\u7684\\u793e\\u4ea4\\u901a\\u4fe1\\u5e73\\u53f0\\uff0c\\u5b83\\u5df2\\u7ecf\\u5168\\u9762\\u878d\\u5165\\u6211\\u4eec\\u7684\\u751f\\u6d3b\\uff0c\\u6b63\\u5982\\u5b83\\u7684\\u53e3\\u53f7\\u6240\\u8bf4\\uff0c\\u5fae\\u4fe1\\u662f\\u4e00\\u79cd\\u751f\\u6d3b\\u65b9\\u5f0f\\u3002\\u672c\\u4e66\\u4ecb\\u7ecd\\u5fae\\u4fe1\\u53ca\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u4e0a\\u7684\\u5f00\\u53d1\\uff0c\\u6db5\\u76d6\\u4e86\\u5305\\u62ec\\u5fae\\u4fe1\\u652f\\u4ed8\\u5728\\u5185\\u7684\\u6240\\u6709\\u63a5\\u53e3\\u7684\\u6280\\u672f\\u8bb2\\u89e3\\uff0c\\u4ee5\\u5404\\u7c7b\\u5e94\\u7528\\u5f00\\u53d1\\u4e3a\\u5b9e\\u4f8b\",\"preview\":\"\\/\\/img14.360buyimg.com\\/n1\\/jfs\\/t6166\\/335\\/652478356\\/130534\\/b275bd7c\\/59422eefNc95bdcca.jpg\",\"price\":7690}', '1', '0');
INSERT INTO `order_item` VALUES ('2', '1', '2', '{\"name\":\"ThinkPHP\\u5b9e\\u6218\",\"summary\":\"\\u672c\\u4e66\\u5b9e\\u6218\\u6027\\u5f88\\u5f3a\\uff0c\\u6ca1\\u6709\\u5197\\u957f\\u7684\\u6982\\u5ff5\\u8bb2\\u89e3\\uff0c\\u90fd\\u662f\\u5b9e\\u9645\\u9879\\u76ee\\u4e2d\\u4f7f\\u7528\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff0c\\u6bd4\\u5982\\u9a8c\\u8bc1\\u7801\\u3001\\u6587\\u4ef6\\u4e0a\\u4f20\\u3001\\u56fe\\u50cf\\u5904\\u7406\\u3001\\u8c03\\u8bd5\\u3001\\u5b89\\u5168\\u3001\\u7f13\\u5b58\\u7b49\\u3002\\u7559\\u8a00\\u677f\\u3001\\u535a\\u5ba2\\u3001\\u8bba\\u575b\\u3001\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u5f00\\u53d14\\u4e2a\\u5b9e\\u6218\\u9879\\u76ee\\u6848\\u4f8b\",\"preview\":\"\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t5134\\/102\\/158367023\\/109977\\/46ba081f\\/58f9dd89Nff920fa1.jpg\",\"price\":3920}', '3', '0');
INSERT INTO `order_item` VALUES ('3', '3', '3', '{\"name\":\"Node.js\\u786c\\u5b9e\\u6218\\uff1a115\\u4e2a\\u6838\\u5fc3\\u6280\\u5de7\",\"summary\":\"\\u672c\\u4e66\\u7cbe\\u5fc3\\u7ec4\\u7ec7115 \\u4e2a\\u5df2\\u901a\\u8fc7\\u6d4b\\u8bd5\\u7684\\u4f8b\\u5b50\\uff0c\\u5e76\\u7ec6\\u81f4\\u5256\\u6790\\u4fdd\\u969c\\u8fd9\\u4e9bNode\\u5e94\\u7528\\u826f\\u597d\\u8fd0\\u884c\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff1b\\u91c7\\u7528\\u63d0\\u51fa\\u95ee\\u9898\\/\\u89e3\\u51b3\\u95ee\\u9898\\u6a21\\u5f0f\\uff0c\\u56ca\\u62ec\\u57fa\\u4e8e\\u4e8b\\u4ef6\\u7684\\u7f16\\u7a0b\\u3001\\u6d41\\u3001\\u96c6\\u6210\\u5916\\u90e8\\u5e94\\u7528\\u548c\\u53d1\\u5e03\\u7b49\\u91cd\\u8981\\u8bdd\\u9898\",\"preview\":\"https:\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t3154\\/275\\/4458168308\\/153672\\/a9b5507b\\/584839baN45eeec7b.jpg\",\"price\":9890}', '3', '0');
INSERT INTO `order_item` VALUES ('4', '4', '4', '{\"name\":\"\\u6df1\\u5165\\u6d45\\u51faNode.js\",\"summary\":\"\\u300a\\u6df1\\u5165\\u6d45\\u51faNode.js\\u300b\\u4ece\\u4e0d\\u540c\\u7684\\u89c6\\u89d2\\u4ecb\\u7ecd\\u4e86 Node \\u5185\\u5728\\u7684\\u7279\\u70b9\\u548c\\u7ed3\\u6784\\u3002\\u7531\\u9996\\u7ae0Node \\u4ecb\\u7ecd\\u4e3a\\u7d22\\u5f15\\uff0c\\u6d89\\u53caNode \\u7684\\u5404\\u4e2a\\u65b9\\u9762\\uff0c\\u4e3b\\u8981\\u5185\\u5bb9\\u5305\\u542b\\u6a21\\u5757\\u673a\\u5236\\u7684\\u63ed\\u793a\\u3001\\u5f02\\u6b65I\\/O \\u5b9e\\u73b0\\u539f\\u7406\\u7684\\u5c55\\u73b0\\u3001\\u5f02\\u6b65\\u7f16\\u7a0b\\u7684\\u63a2\\u8ba8\",\"preview\":\"https:\\/\\/img13.360buyimg.com\\/n1\\/jfs\\/t6094\\/107\\/710811867\\/382815\\/4d54717\\/592bf165N755a88f0.jpg\",\"price\":4870}', '1', '0');
INSERT INTO `order_item` VALUES ('5', '3', '5', '{\"name\":\"Node.js\\u786c\\u5b9e\\u6218\\uff1a115\\u4e2a\\u6838\\u5fc3\\u6280\\u5de7\",\"summary\":\"\\u672c\\u4e66\\u7cbe\\u5fc3\\u7ec4\\u7ec7115 \\u4e2a\\u5df2\\u901a\\u8fc7\\u6d4b\\u8bd5\\u7684\\u4f8b\\u5b50\\uff0c\\u5e76\\u7ec6\\u81f4\\u5256\\u6790\\u4fdd\\u969c\\u8fd9\\u4e9bNode\\u5e94\\u7528\\u826f\\u597d\\u8fd0\\u884c\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff1b\\u91c7\\u7528\\u63d0\\u51fa\\u95ee\\u9898\\/\\u89e3\\u51b3\\u95ee\\u9898\\u6a21\\u5f0f\\uff0c\\u56ca\\u62ec\\u57fa\\u4e8e\\u4e8b\\u4ef6\\u7684\\u7f16\\u7a0b\\u3001\\u6d41\\u3001\\u96c6\\u6210\\u5916\\u90e8\\u5e94\\u7528\\u548c\\u53d1\\u5e03\\u7b49\\u91cd\\u8981\\u8bdd\\u9898\",\"preview\":\"https:\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t3154\\/275\\/4458168308\\/153672\\/a9b5507b\\/584839baN45eeec7b.jpg\",\"price\":9890}', '1', '0');
INSERT INTO `order_item` VALUES ('6', '3', '6', '{\"name\":\"Node.js\\u786c\\u5b9e\\u6218\\uff1a115\\u4e2a\\u6838\\u5fc3\\u6280\\u5de7\",\"summary\":\"\\u672c\\u4e66\\u7cbe\\u5fc3\\u7ec4\\u7ec7115 \\u4e2a\\u5df2\\u901a\\u8fc7\\u6d4b\\u8bd5\\u7684\\u4f8b\\u5b50\\uff0c\\u5e76\\u7ec6\\u81f4\\u5256\\u6790\\u4fdd\\u969c\\u8fd9\\u4e9bNode\\u5e94\\u7528\\u826f\\u597d\\u8fd0\\u884c\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff1b\\u91c7\\u7528\\u63d0\\u51fa\\u95ee\\u9898\\/\\u89e3\\u51b3\\u95ee\\u9898\\u6a21\\u5f0f\\uff0c\\u56ca\\u62ec\\u57fa\\u4e8e\\u4e8b\\u4ef6\\u7684\\u7f16\\u7a0b\\u3001\\u6d41\\u3001\\u96c6\\u6210\\u5916\\u90e8\\u5e94\\u7528\\u548c\\u53d1\\u5e03\\u7b49\\u91cd\\u8981\\u8bdd\\u9898\",\"preview\":\"https:\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t3154\\/275\\/4458168308\\/153672\\/a9b5507b\\/584839baN45eeec7b.jpg\",\"price\":9890}', '1', '1');
INSERT INTO `order_item` VALUES ('7', '3', '7', '{\"name\":\"Node.js\\u786c\\u5b9e\\u6218\\uff1a115\\u4e2a\\u6838\\u5fc3\\u6280\\u5de7\",\"summary\":\"\\u672c\\u4e66\\u7cbe\\u5fc3\\u7ec4\\u7ec7115 \\u4e2a\\u5df2\\u901a\\u8fc7\\u6d4b\\u8bd5\\u7684\\u4f8b\\u5b50\\uff0c\\u5e76\\u7ec6\\u81f4\\u5256\\u6790\\u4fdd\\u969c\\u8fd9\\u4e9bNode\\u5e94\\u7528\\u826f\\u597d\\u8fd0\\u884c\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff1b\\u91c7\\u7528\\u63d0\\u51fa\\u95ee\\u9898\\/\\u89e3\\u51b3\\u95ee\\u9898\\u6a21\\u5f0f\\uff0c\\u56ca\\u62ec\\u57fa\\u4e8e\\u4e8b\\u4ef6\\u7684\\u7f16\\u7a0b\\u3001\\u6d41\\u3001\\u96c6\\u6210\\u5916\\u90e8\\u5e94\\u7528\\u548c\\u53d1\\u5e03\\u7b49\\u91cd\\u8981\\u8bdd\\u9898\",\"preview\":\"https:\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t3154\\/275\\/4458168308\\/153672\\/a9b5507b\\/584839baN45eeec7b.jpg\",\"price\":9890}', '1', '0');
INSERT INTO `order_item` VALUES ('8', '1', '8', '{\"name\":\"ThinkPHP\\u5b9e\\u6218\",\"summary\":\"\\u672c\\u4e66\\u5b9e\\u6218\\u6027\\u5f88\\u5f3a\\uff0c\\u6ca1\\u6709\\u5197\\u957f\\u7684\\u6982\\u5ff5\\u8bb2\\u89e3\\uff0c\\u90fd\\u662f\\u5b9e\\u9645\\u9879\\u76ee\\u4e2d\\u4f7f\\u7528\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff0c\\u6bd4\\u5982\\u9a8c\\u8bc1\\u7801\\u3001\\u6587\\u4ef6\\u4e0a\\u4f20\\u3001\\u56fe\\u50cf\\u5904\\u7406\\u3001\\u8c03\\u8bd5\\u3001\\u5b89\\u5168\\u3001\\u7f13\\u5b58\\u7b49\\u3002\\u7559\\u8a00\\u677f\\u3001\\u535a\\u5ba2\\u3001\\u8bba\\u575b\\u3001\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u5f00\\u53d14\\u4e2a\\u5b9e\\u6218\\u9879\\u76ee\\u6848\\u4f8b\",\"preview\":\"\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t5134\\/102\\/158367023\\/109977\\/46ba081f\\/58f9dd89Nff920fa1.jpg\",\"price\":3920}', '1', '1');
INSERT INTO `order_item` VALUES ('9', '2', '8', '{\"name\":\"\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u5f00\\u53d1\\uff1a\\u4ece\\u96f6\\u57fa\\u7840\\u5230ThinkPHP5\\u9ad8\\u6027\\u80fd\\u6846\\u67b6\\u5b9e\\u8df5\",\"summary\":\"\\u5fae\\u4fe1\\u662f\\u65f6\\u4e0b\\u70ed\\u95e8\\u7684\\u793e\\u4ea4\\u901a\\u4fe1\\u5e73\\u53f0\\uff0c\\u5b83\\u5df2\\u7ecf\\u5168\\u9762\\u878d\\u5165\\u6211\\u4eec\\u7684\\u751f\\u6d3b\\uff0c\\u6b63\\u5982\\u5b83\\u7684\\u53e3\\u53f7\\u6240\\u8bf4\\uff0c\\u5fae\\u4fe1\\u662f\\u4e00\\u79cd\\u751f\\u6d3b\\u65b9\\u5f0f\\u3002\\u672c\\u4e66\\u4ecb\\u7ecd\\u5fae\\u4fe1\\u53ca\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u4e0a\\u7684\\u5f00\\u53d1\\uff0c\\u6db5\\u76d6\\u4e86\\u5305\\u62ec\\u5fae\\u4fe1\\u652f\\u4ed8\\u5728\\u5185\\u7684\\u6240\\u6709\\u63a5\\u53e3\\u7684\\u6280\\u672f\\u8bb2\\u89e3\\uff0c\\u4ee5\\u5404\\u7c7b\\u5e94\\u7528\\u5f00\\u53d1\\u4e3a\\u5b9e\\u4f8b\",\"preview\":\"\\/\\/img14.360buyimg.com\\/n1\\/jfs\\/t6166\\/335\\/652478356\\/130534\\/b275bd7c\\/59422eefNc95bdcca.jpg\",\"price\":7690}', '1', '1');
INSERT INTO `order_item` VALUES ('10', '4', '8', '{\"name\":\"\\u6df1\\u5165\\u6d45\\u51faNode.js\",\"summary\":\"\\u300a\\u6df1\\u5165\\u6d45\\u51faNode.js\\u300b\\u4ece\\u4e0d\\u540c\\u7684\\u89c6\\u89d2\\u4ecb\\u7ecd\\u4e86 Node \\u5185\\u5728\\u7684\\u7279\\u70b9\\u548c\\u7ed3\\u6784\\u3002\\u7531\\u9996\\u7ae0Node \\u4ecb\\u7ecd\\u4e3a\\u7d22\\u5f15\\uff0c\\u6d89\\u53caNode \\u7684\\u5404\\u4e2a\\u65b9\\u9762\\uff0c\\u4e3b\\u8981\\u5185\\u5bb9\\u5305\\u542b\\u6a21\\u5757\\u673a\\u5236\\u7684\\u63ed\\u793a\\u3001\\u5f02\\u6b65I\\/O \\u5b9e\\u73b0\\u539f\\u7406\\u7684\\u5c55\\u73b0\\u3001\\u5f02\\u6b65\\u7f16\\u7a0b\\u7684\\u63a2\\u8ba8\",\"preview\":\"https:\\/\\/img13.360buyimg.com\\/n1\\/jfs\\/t6094\\/107\\/710811867\\/382815\\/4d54717\\/592bf165N755a88f0.jpg\",\"price\":4870}', '2', '1');
INSERT INTO `order_item` VALUES ('11', '3', '8', '{\"name\":\"Node.js\\u786c\\u5b9e\\u6218\\uff1a115\\u4e2a\\u6838\\u5fc3\\u6280\\u5de7\",\"summary\":\"\\u672c\\u4e66\\u7cbe\\u5fc3\\u7ec4\\u7ec7115 \\u4e2a\\u5df2\\u901a\\u8fc7\\u6d4b\\u8bd5\\u7684\\u4f8b\\u5b50\\uff0c\\u5e76\\u7ec6\\u81f4\\u5256\\u6790\\u4fdd\\u969c\\u8fd9\\u4e9bNode\\u5e94\\u7528\\u826f\\u597d\\u8fd0\\u884c\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff1b\\u91c7\\u7528\\u63d0\\u51fa\\u95ee\\u9898\\/\\u89e3\\u51b3\\u95ee\\u9898\\u6a21\\u5f0f\\uff0c\\u56ca\\u62ec\\u57fa\\u4e8e\\u4e8b\\u4ef6\\u7684\\u7f16\\u7a0b\\u3001\\u6d41\\u3001\\u96c6\\u6210\\u5916\\u90e8\\u5e94\\u7528\\u548c\\u53d1\\u5e03\\u7b49\\u91cd\\u8981\\u8bdd\\u9898\",\"preview\":\"https:\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t3154\\/275\\/4458168308\\/153672\\/a9b5507b\\/584839baN45eeec7b.jpg\",\"price\":9890}', '1', '1');
INSERT INTO `order_item` VALUES ('12', '1', '9', '{\"name\":\"ThinkPHP\\u5b9e\\u6218\",\"summary\":\"\\u672c\\u4e66\\u5b9e\\u6218\\u6027\\u5f88\\u5f3a\\uff0c\\u6ca1\\u6709\\u5197\\u957f\\u7684\\u6982\\u5ff5\\u8bb2\\u89e3\\uff0c\\u90fd\\u662f\\u5b9e\\u9645\\u9879\\u76ee\\u4e2d\\u4f7f\\u7528\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff0c\\u6bd4\\u5982\\u9a8c\\u8bc1\\u7801\\u3001\\u6587\\u4ef6\\u4e0a\\u4f20\\u3001\\u56fe\\u50cf\\u5904\\u7406\\u3001\\u8c03\\u8bd5\\u3001\\u5b89\\u5168\\u3001\\u7f13\\u5b58\\u7b49\\u3002\\u7559\\u8a00\\u677f\\u3001\\u535a\\u5ba2\\u3001\\u8bba\\u575b\\u3001\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u5f00\\u53d14\\u4e2a\\u5b9e\\u6218\\u9879\\u76ee\\u6848\\u4f8b\",\"preview\":\"\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t5134\\/102\\/158367023\\/109977\\/46ba081f\\/58f9dd89Nff920fa1.jpg\",\"price\":3920}', '1', '1');
INSERT INTO `order_item` VALUES ('13', '1', '10', '{\"name\":\"ThinkPHP\\u5b9e\\u6218\",\"summary\":\"\\u672c\\u4e66\\u5b9e\\u6218\\u6027\\u5f88\\u5f3a\\uff0c\\u6ca1\\u6709\\u5197\\u957f\\u7684\\u6982\\u5ff5\\u8bb2\\u89e3\\uff0c\\u90fd\\u662f\\u5b9e\\u9645\\u9879\\u76ee\\u4e2d\\u4f7f\\u7528\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff0c\\u6bd4\\u5982\\u9a8c\\u8bc1\\u7801\\u3001\\u6587\\u4ef6\\u4e0a\\u4f20\\u3001\\u56fe\\u50cf\\u5904\\u7406\\u3001\\u8c03\\u8bd5\\u3001\\u5b89\\u5168\\u3001\\u7f13\\u5b58\\u7b49\\u3002\\u7559\\u8a00\\u677f\\u3001\\u535a\\u5ba2\\u3001\\u8bba\\u575b\\u3001\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u5f00\\u53d14\\u4e2a\\u5b9e\\u6218\\u9879\\u76ee\\u6848\\u4f8b\",\"preview\":\"\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t5134\\/102\\/158367023\\/109977\\/46ba081f\\/58f9dd89Nff920fa1.jpg\",\"price\":3920}', '2', '1');
INSERT INTO `order_item` VALUES ('14', '1', '11', '{\"name\":\"ThinkPHP\\u5b9e\\u6218\",\"summary\":\"\\u672c\\u4e66\\u5b9e\\u6218\\u6027\\u5f88\\u5f3a\\uff0c\\u6ca1\\u6709\\u5197\\u957f\\u7684\\u6982\\u5ff5\\u8bb2\\u89e3\\uff0c\\u90fd\\u662f\\u5b9e\\u9645\\u9879\\u76ee\\u4e2d\\u4f7f\\u7528\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff0c\\u6bd4\\u5982\\u9a8c\\u8bc1\\u7801\\u3001\\u6587\\u4ef6\\u4e0a\\u4f20\\u3001\\u56fe\\u50cf\\u5904\\u7406\\u3001\\u8c03\\u8bd5\\u3001\\u5b89\\u5168\\u3001\\u7f13\\u5b58\\u7b49\\u3002\\u7559\\u8a00\\u677f\\u3001\\u535a\\u5ba2\\u3001\\u8bba\\u575b\\u3001\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u5f00\\u53d14\\u4e2a\\u5b9e\\u6218\\u9879\\u76ee\\u6848\\u4f8b\",\"preview\":\"\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t5134\\/102\\/158367023\\/109977\\/46ba081f\\/58f9dd89Nff920fa1.jpg\",\"price\":3920}', '2', '1');
INSERT INTO `order_item` VALUES ('15', '2', '11', '{\"name\":\"\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u5f00\\u53d1\\uff1a\\u4ece\\u96f6\\u57fa\\u7840\\u5230ThinkPHP5\\u9ad8\\u6027\\u80fd\\u6846\\u67b6\\u5b9e\\u8df5\",\"summary\":\"\\u5fae\\u4fe1\\u662f\\u65f6\\u4e0b\\u70ed\\u95e8\\u7684\\u793e\\u4ea4\\u901a\\u4fe1\\u5e73\\u53f0\\uff0c\\u5b83\\u5df2\\u7ecf\\u5168\\u9762\\u878d\\u5165\\u6211\\u4eec\\u7684\\u751f\\u6d3b\\uff0c\\u6b63\\u5982\\u5b83\\u7684\\u53e3\\u53f7\\u6240\\u8bf4\\uff0c\\u5fae\\u4fe1\\u662f\\u4e00\\u79cd\\u751f\\u6d3b\\u65b9\\u5f0f\\u3002\\u672c\\u4e66\\u4ecb\\u7ecd\\u5fae\\u4fe1\\u53ca\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u4e0a\\u7684\\u5f00\\u53d1\\uff0c\\u6db5\\u76d6\\u4e86\\u5305\\u62ec\\u5fae\\u4fe1\\u652f\\u4ed8\\u5728\\u5185\\u7684\\u6240\\u6709\\u63a5\\u53e3\\u7684\\u6280\\u672f\\u8bb2\\u89e3\\uff0c\\u4ee5\\u5404\\u7c7b\\u5e94\\u7528\\u5f00\\u53d1\\u4e3a\\u5b9e\\u4f8b\",\"preview\":\"\\/\\/img14.360buyimg.com\\/n1\\/jfs\\/t6166\\/335\\/652478356\\/130534\\/b275bd7c\\/59422eefNc95bdcca.jpg\",\"price\":7690}', '2', '1');
INSERT INTO `order_item` VALUES ('16', '1', '12', '{\"name\":\"ThinkPHP\\u5b9e\\u6218\",\"summary\":\"\\u672c\\u4e66\\u5b9e\\u6218\\u6027\\u5f88\\u5f3a\\uff0c\\u6ca1\\u6709\\u5197\\u957f\\u7684\\u6982\\u5ff5\\u8bb2\\u89e3\\uff0c\\u90fd\\u662f\\u5b9e\\u9645\\u9879\\u76ee\\u4e2d\\u4f7f\\u7528\\u7684\\u5b9e\\u7528\\u6280\\u672f\\uff0c\\u6bd4\\u5982\\u9a8c\\u8bc1\\u7801\\u3001\\u6587\\u4ef6\\u4e0a\\u4f20\\u3001\\u56fe\\u50cf\\u5904\\u7406\\u3001\\u8c03\\u8bd5\\u3001\\u5b89\\u5168\\u3001\\u7f13\\u5b58\\u7b49\\u3002\\u7559\\u8a00\\u677f\\u3001\\u535a\\u5ba2\\u3001\\u8bba\\u575b\\u3001\\u5fae\\u4fe1\\u516c\\u4f17\\u5e73\\u53f0\\u5f00\\u53d14\\u4e2a\\u5b9e\\u6218\\u9879\\u76ee\\u6848\\u4f8b\",\"preview\":\"\\/\\/img10.360buyimg.com\\/n1\\/jfs\\/t5134\\/102\\/158367023\\/109977\\/46ba081f\\/58f9dd89Nff920fa1.jpg\",\"price\":3920}', '1', '1');

-- ----------------------------
-- Table structure for products
-- ----------------------------
DROP TABLE IF EXISTS `products`;
CREATE TABLE `products` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `category_id` int(10) unsigned NOT NULL,
  `name` varchar(50) NOT NULL DEFAULT '',
  `summary` varchar(100) NOT NULL DEFAULT '',
  `preview` varchar(255) NOT NULL DEFAULT '' COMMENT '图片预览',
  `price` int(11) NOT NULL DEFAULT '0' COMMENT '单位：分',
  `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' ON UPDATE CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of products
-- ----------------------------
INSERT INTO `products` VALUES ('1', '4', 'ThinkPHP实战', '本书实战性很强，没有冗长的概念讲解，都是实际项目中使用的实用技术，比如验证码、文件上传、图像处理、调试、安全、缓存等。留言板、博客、论坛、微信公众平台开发4个实战项目案例', '//img10.360buyimg.com/n1/jfs/t5134/102/158367023/109977/46ba081f/58f9dd89Nff920fa1.jpg', '3920', '2018-08-14 11:28:33', '0000-00-00 00:00:00');
INSERT INTO `products` VALUES ('2', '4', '微信公众平台开发：从零基础到ThinkPHP5高性能框架实践', '微信是时下热门的社交通信平台，它已经全面融入我们的生活，正如它的口号所说，微信是一种生活方式。本书介绍微信及微信公众平台上的开发，涵盖了包括微信支付在内的所有接口的技术讲解，以各类应用开发为实例', '//img14.360buyimg.com/n1/jfs/t6166/335/652478356/130534/b275bd7c/59422eefNc95bdcca.jpg', '7690', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `products` VALUES ('3', '8', 'Node.js硬实战：115个核心技巧', '本书精心组织115 个已通过测试的例子，并细致剖析保障这些Node应用良好运行的实用技术；采用提出问题/解决问题模式，囊括基于事件的编程、流、集成外部应用和发布等重要话题', 'https://img10.360buyimg.com/n1/jfs/t3154/275/4458168308/153672/a9b5507b/584839baN45eeec7b.jpg', '9890', '0000-00-00 00:00:00', '0000-00-00 00:00:00');
INSERT INTO `products` VALUES ('4', '8', '深入浅出Node.js', '《深入浅出Node.js》从不同的视角介绍了 Node 内在的特点和结构。由首章Node 介绍为索引，涉及Node 的各个方面，主要内容包含模块机制的揭示、异步I/O 实现原理的展现、异步编程的探讨', 'https://img13.360buyimg.com/n1/jfs/t6094/107/710811867/382815/4d54717/592bf165N755a88f0.jpg', '4870', '2018-08-14 10:53:21', '0000-00-00 00:00:00');
INSERT INTO `products` VALUES ('5', '11', 'Laravel入门与实战：构建主流PHP应用开发框架', '宇宙至强语言PHP的“全栈”框架：前沿、主流、高效、全面！', '//m.360buyimg.com/mobilecms/s750x750_jfs/t19030/341/1140559169/235512/8d000d30/5abe08f8N8fd5f341.jpg!q80.jpg.webp', '9720', '0000-00-00 00:00:00', '0000-00-00 00:00:00');

-- ----------------------------
-- Table structure for product_detail
-- ----------------------------
DROP TABLE IF EXISTS `product_detail`;
CREATE TABLE `product_detail` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `product_id` int(10) unsigned NOT NULL,
  `content` text NOT NULL COMMENT '产品详情',
  `sales_number` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '销量',
  `comment_number` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '评论数',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of product_detail
-- ----------------------------
INSERT INTO `product_detail` VALUES ('1', '1', '<div id=\"commDesc\" class=\"detail_pc strong_link\" hasdata=\"1\"><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">产品特色</span></div><p><img src=\"//img30.360buyimg.com/vc/jfs/t5194/27/431935078/359766/40df3caa/58fffdd5N7588f424.jpg.dpg\" title=\"京东.jpg\" loaded=\"1\"></p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">编辑推荐</span></div>　　本书实战性很强，没有冗长的概念讲解，都是实际项目中使用的实用技术，比如验证码、文件上传、图像处理、调试、安全、缓存等。留言板、博客、论坛、微信公众平台开发4个实战项目案例，使读者尽快切入ThinkPHP企业级项目开发。<br><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">内容简介</span></div>　　PHP是一种通用开源脚本语言，开源、跨平台、易于使用，主要适用于Web开发领域。MVC模式使得PHP在大型Web项目开发中耦合性低、重用性高、可维护性高、有利于软件工程化管理。本书以实用性为目标，系统地介绍了ThinkPHP框架的相关技术及其在Web开发中的应用。<br>　　全书共14章，每一章都是相对独立的知识点的集合。内容涵盖了ThinkPHP常用功能模块和实用技巧、MySQL数据库的设计与应用、完整的Web项目开发流程等目前PHP开发中*主流的技术，每一章都有大量的示例以及详尽的注释，便于读者的理解和掌握。*后通过4个完整的项目详细介绍了Web应用从设计到运行的各个环节，便于读者更好地实践。<br>　　对于拥有PHP基础而不知道下一步该做什么的读者而言，本书不失为一本好的入门教材，本书所有的实例都可以在Web开发中直接使用，使读者能够加快Web应用开发的进程。此外，本书也适合对于网络开发有兴趣的读者，以及大中专院校和培训机构的师生阅读与参考。<br><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">作者简介</span></div>　　夏磊，目前从事软件开发工作。精通PHP服务器脚本语言技术，善于把握运用新技术，如LAMP&amp;LNMP平台以及Node.js平台下Web软件的开发、软件架构、设计模式等。作者博客上大量的PHP相关技术文章，深受读者好评。<br><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">目录</span></div><p>第1章 ThinkPHP入门 1 <br>1.1 MVC模式概述 1 <br>1.2 ThinkPHP是什么 2 <br>1.3 搭建PHP开发环境 2 <br>1.3.1 获取UPUPW 2 <br>1.3.2 安装UPUPW 3 <br>1.3.3 目录结构说明 4 <br>1.3.4 添加虚拟主机 4 <br>1.3.5 安装集成开发环境PHPStorm 6 <br>1.4 *个ThinkPHP程序 7 <br>1.5 应用结构说明 8 <br>1.5.1 目录说明 8 <br>1.5.2 入口文件 8 <br>1.5.3 自动生成 9 <br>1.5.4 模块 9 <br>1.5.5 控制器 9 <br>1.6 术语解释 10 <br>1.7 小结 11 <br>第2章 配 置 12 <br>2.1 配置类型 13 <br>2.1.1 默认配置 13 <br>2.1.2 公共配置 13 <br>2.1.3 模式配置 13 <br>2.1.4 调试配置 14 <br>2.1.5 场景配置 14 <br>2.1.6 模块配置 14 <br>2.1.7 扩展配置 14 <br>2.1.8 动态配置 15 <br>2.2 配置操作 15 <br>2.2.1 C函数 16 <br>2.2.2 读取配置 17 <br>2.2.3 加载扩展配置 19 <br>2.2.4 写入配置 20 <br>2.3 小结 23 <br>第3章 路 由 24 <br>3.1 URL的三种模式 24 <br>3.1.1 动态URL 24 <br>3.1.2 静态URL 25 <br>3.1.3 伪静态URL 25 <br>3.2 ThinkPHP的路由 25 <br>3.2.1 路由模式 25 <br>3.2.2 路由配置 29 <br>3.3 小结 34 <br>第4章 控制器 35 <br>4.1 控制器的定义 35 <br>4.2 前置操作和后置操作 37 <br>4.3 动作参数绑定 38 <br>4.4 伪静态 40 <br>4.5 URL大小写 40 <br>4.6 URL生成 41 <br>4.6.1 地址表达式 41 <br>4.6.2 参数 41 <br>4.6.3 伪静态后缀 41 <br>4.6.4 URL模式处理 41 <br>4.6.5 生成路由地址 42 <br>4.7 Ajax返回 42 <br>4.8 重定向和页面跳转 43 <br>4.8.1 重定向 43 <br>4.8.2 页面跳转 44 <br>4.9 HTTP请求方法 46 <br>4.10 读取输入 48 <br>4.11 空操作 50 <br>4.12 空控制器 51 <br>4.13 小结 52 <br>第5章 模 型 53 <br>5.1 准备工作 53 <br>5.2 模型定义 54 <br>5.3 模型实例化 54 <br>5.3.1 new实例化 54 <br>5.3.2 M函数实例化 55 <br>5.3.3 D函数实例化 55 <br>5.3.4 空模型实例化 55 <br>5.4 连贯操作 55 <br>5.4.1 where 56 <br>5.4.2 table 57 <br>5.4.3 alias 57 <br>5.4.4 data 58 <br>5.4.5 field 58 <br>5.4.6 order 59 <br>5.4.7 limit 60 <br>5.4.8 page 61 <br>5.4.9 group 61 <br>5.4.10 having 61 <br>5.4.11 join 61 <br>5.4.12 union 62 <br>5.4.13 distinct 62 <br>5.4.14 lock 62 <br>5.4.15 cache 63 <br>5.4.16 fetchSql 63 <br>5.4.17 strict 64 <br>5.4.18 index 64 <br>5.5 CURD操作 64 <br>5.5.1 创建数据 64 <br>5.5.2 插入数据 65 <br>5.5.3 读取数据 65 <br>5.5.4 更新数据 66 <br>5.5.5 删除数据 67 <br>5.6 查询语言 68 <br>5.6.1 查询方式 68 <br>5.6.2 表达式查询 68 <br>5.6.3 快捷查询 70 <br>5.6.4 区间查询 71 <br>5.6.5 统计查询 71 <br>5.7 自动验证 72 <br>5.8 自动完成 78 <br>5.9 视图模型 82 <br>5.10 关联模型 85 <br>5.10.1 HAS_ONE 85 <br>5.10.2 BELONGS_TO 88 <br>5.10.3 HAS_MANY 89 <br>5.10.4 MANY_TO_MANY 90 <br>5.11 小结 91 <br>第6章 视 图 92 <br>6.1 模板定义 92 <br>6.2 模板主题 92 <br>6.3 模板赋值 93 <br>6.4 模板渲染 93 <br>6.5 总结 94 <br>第7章 模 板 95 <br>7.1 变量输出 95 <br>7.1.1 输出形式 95 <br>7.1.2 测试 96 <br>7.2 系统变量 98 <br>7.2.1 语法形式 98 <br>7.2.2 配置输出 98 <br>7.2.3 测试 98 <br>7.3 函数 100 <br>7.3.1 函数类型 100 <br>7.3.2 测试 100 <br>7.4 变量默认值 101 <br>7.4.1 语法形式 101 <br>7.4.2 测试 102 <br>7.5 算术运算符 103 <br>7.5.1 语法形式 103 <br>7.5.2 测试 103 <br>7.6 模板继承 105 <br>7.6.1 语法形式 105 <br>7.6.2 测试 106 <br>7.7 视图包含 107 <br>7.7.1 语法形式 107 <br>7.7.2 模板表达式 107 <br>7.7.3 模板文件 107 <br>7.7.4 测试 107 <br>7.8 内置标签 108 <br>7.8.1 volist标签 109 <br>7.8.2 foreach标签 110 <br>7.8.3 for标签 110 <br>7.8.4 switch标签 111 <br>7.8.5 比较标签 111 <br>7.8.6 empty标签 114 <br>7.8.7 defined标签 114 <br>7.8.8 标签嵌套 114 <br>7.8.9 import标签 115 <br>7.8.10 使用原生PHP 115 <br>7.8.11 不解析输出 115 <br>7.9 模板布局 116 <br>7.10 模板常量替换 116 <br>7.11 模板注释 117 <br>7.12 测试 118 <br>7.13 总结 126 <br>第8章 调 试 127 <br>8.1 调试模式 127 <br>8.2 异常处理 127 <br>8.3 日志 128 <br>8.3.1 日志级别 129 <br>8.3.2 记录方式 129 <br>8.3.3 写入日志 129 <br>8.4 变量输出 130 <br>8.5 执行统计 130 <br>8.6 SQL输出 131 <br>8.7 测试 131 <br>8.7.1 异常测试 131 <br>8.7.2 日志测试 132 <br>8.7.3 变量输出测试 133 <br>8.7.4 执行统计测试 133 <br>8.7.5 SQL输出测试 134 <br>8.8 总结 135</p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">精彩书摘</span></div>　　第 12 章<br>　　博客系统项目实战 ?<br>　　12.1 项目目的<br>　　本博客系统项目目的如下：<br>　　记载个人学习、工作、生活上一些值得回味的事情，以及一些值得分享或者探讨的技术。<br>　　用于社会沟通和交友，和他人分享自己的成功。<br>　　自我学习、自我提高。<br>　　12.2 需求分析<br>　　提到博客，大部分人都不会陌生，毕竟大名鼎鼎的wordpress可是业界神话。本章需要实现的也是一个博客系统。当然，并没有wordpress那么强大，不过“麻雀虽小、五脏俱全”，一个博客应有的功能还是需要有的。<br>　　写作。博客的核心功能就是写作，而且是独自写作，有写作就有文章，有文章就涉及文章的分类、发表、编辑、删除。<br>　　评论。既然项目目的中有“用于社会沟通和交友”，那么社会上的读者如何与作者互动呢？所以，评论功能必不可少。有了评论就需要发表评论、管理评论。<br>　　友情链接。好文章如何让别人知道呢？单凭自己的力量是不够的，所以合理地与他人交换友情链接是博客的一种推广手段。<br>　　12.3 功能设计<br>　　通过需求分析的结果，可以总结出博客系统需要以下功能：<br>　　? 管理员登录、修改密码、退出登录。<br>　　? 文章分类添加、编辑、删除。<br>　　? 文章添加、编辑、删除。<br>　　? 发表评论、管理评论。<br>　　? 添加友情链接、删除友情链接、展示友情链接。<br>　　12.4 数据库设计<br>　　根据需求分析以及功能设计，设计出如图12-1所示数据库模型。<br>　　图12-1<br>　　可以看到分类表、文章表、评论表之间存在关系。<br>　　12.5 数据库字典<br>　　1. 文章分类（blog_category）<br>　　文章分类表设计如表12-1所示。<br>　　表12-1<br>　　字段名称 类型 说明<br>　　categoryId int(10) 主键，自增<br>　　name varchar(20) 分类名称<br>　　isNav tinyint(1) 是否显示在导航栏<br>　　total int 文章总数<br>　　sort tinyint(4) 排序<br>　　2. 文章表（blog_article）<br>　　文章表设计如表12-2所示。<br>　　表12-2<br>　　字段名称 类型 说明<br>　　articleId int(11) 主键，自增<br>　　Title varchar(40) 文章标题<br>　　Description varchar(100) 文章简介<br>　　Image varchar(128) 文章封面<br>　　Hits int(11) 点击数<br>　　createdAt int(11) 文章发布时间（时间戳）<br>　　updateAt int(11) 文章更新时间<br>　　Status tinyint(1) 状态（发表，不发表）<br>　　Sort int 文章排序<br>　　Content text 文章正文<br>　　categoryId int 分类ID<br>　　3. 文章评论表（blog_comment）<br>　　文章评论表设计如表12-3所示。<br>　　表12-3<br>　　字段名称 字段类型 说明<br>　　commentId int 主键，自增<br>　　nickname varchar(20) 昵称<br>　　createdAt int(11) 评论时间<br>　　createdIp varchar(15) 评论IP（只考虑IPV4）<br>　　content text 评论内容<br>　　articleId int 文章ID<br>　　4. 管理员表（blog_admin）<br>　　管理员表设计如表12-4所示。<br>　　表12-4<br>　　字段名称 字段类型 说明<br>　　adminId int 管理员ID<br>　　username varchar(20) 用户名<br>　　password char(32) 密码（md5加密后密文）<br>　　createdAt int 账号添加时间<br>　　loginAt int *近登录时间<br>　　loginIp int *近登录IP<br>　　5. 友情链接表（blog_link）<br>　　友情链接表设计如表12-5所示。<br>　　表12-5<br>　　字段名称 字段类型 说明<br>　　linkId int 主键，自增<br>　　name varchar(20) 网站名称<br>　　link varchar(100) 链接地址<br>　　status tinyint(1) 状态<br>　　sort int 排序<br>　　12.6 模块设计<br>　　12.6.1 Admin模块<br>　　admin为后台管理模块，需要管理文章、分类、评论、友情链接等功能。所以根据功能应该分开4个Controller进行处理。Controller如下：<br>　　? ArticleController，文章控制器。<br>　　? CategoryController，分类控制器。<br>　　? CommentController，评论控制器。<br>　　? LinkController，友情链接控制器。<br>　　1. 权限检测<br>　　由于admin模块属于受保护的模块，所以以上4个控制器必须登录后才能正常访问，为了不写重复代码，需要新建一个控制器处理登录检测，以上4个控制器继承该基本控制器实现统一权限检测。<br>　　在Admin模块新建BaseController.class.php，添加_initialize方法，代码如下：<br>　　protected function _initialize()<br>　　{<br>　　if (session(\'admin.adminId\') === null)<br>　　{<br>　　$this-&gt;error(\'请登录\', U(\'admin/index/login\'));<br>　　}<br>　　C(\'LAYOUT_NAME\', \'admin\');<br>　　}<br>　　需要进行权限检测的控制器继承BaseController即可。<br>　　2. 分页处理<br>　　由于该博客系统是一直在线上运行的，所以数据量不可预测，在列表页需要进行分页处理。以下是友情链接主页的分页代码：<br>　　public function index()<br>　　{<br>　　$model = new Model(\'Link\');<br>　　$count = $model-&gt;count();<br>　　$page = new Page($count);<br>　　$show = $page-&gt;show();<br>　　$list = $model-&gt;order(\'linkId DESC\')-&gt;limit($page-&gt;firstRow . \',\' . $page-&gt;listRows)-&gt;select();<br>　　$this-&gt;assign(\'list\', $list);<br>　　$this-&gt;assign(\'page\', $show);<br>　　$this-&gt;display();<br>　　}<br>　　3. 文章-分类模型<br>　　文章是属于分类的，所以读取文章列表的时候需要将分类信息同时查询处理，这里使用ThinkPHP提供的ViewModel，在Common模块新建Model文件夹，在Model文件夹下新建ArticleCategoryViewModel.class.php，代码如下：<br>　　namespace Common\\Model;<br>　　use Think\\Model\\ViewModel;<br>　　class ArticleCategoryViewModel extends ViewModel<br>　　{<br>　　public $viewFields = array(<br>　　\'Article\' =&gt; array(\'articleId\', \'title\', \'description\', \'image\', \'hits\', \'createdAt\', \'updateAt\', \'status\', \'sort\', \'content\'),<br>　　\'Category\' =&gt; array(\'categoryId\', \'name\', \'_on\' =&gt; \'Article.categoryId=Category.categoryId\')<br>　　);<br>　　}<br>　　ViewModel的知识可以在第5章第9节查看。<br>　　4. 文件上传<br>　　在设计文章表的时候，有个封面字段，这个字段是用来保存文章封面的，所以需要做一个图片上传的功能。为了贯彻“模块化”的思想，笔者特地将上传模块抽象出来，只要在需要上传的页面include即可。<br>　　在Admin模块的View文件夹添加Common文件夹，在Common文件夹下添加upload.html，代码如下：<br>　　点击上传<br>　　该段代码与一般代码区别不大，但是重点在于：<br>　　uploadCallback &amp;&amp; uploadCallback(data.url);<br>　　如果当前页面定义了uploadCallback函数，则将上传后的结果回调到该函数。<br>　　上传代码，编辑Admin模块下的Index控制器，添加upload方法，代码如下：<br>　　public function upload()<br>　　{<br>　　$upload = new Upload();// 实例化上传类<br>　　$upload-&gt;maxSize = 1024 * 1024 * 2;// 设置附件上传大小<br>　　$upload-&gt;exts = array(\'jpg\', \'gif\', \'png\', \'jpeg\');// 设置附件上传类型<br>　　$upload-&gt;rootPath = __DIR__ . \'/../../../upload/\'; // 设置附件上传根目录<br>　　$upload-&gt;savePath = \'\'; // 设置附件上传（子）目录<br>　　// 上传文件<br>　　$info = $upload-&gt;upload();<br>　　if (!$info)<br>　　{<br>　　$this-&gt;ajaxReturn(array(<br>　　\'error\' =&gt; $upload-&gt;getError()<br>　　));<br>　　}<br>　　else<br>　　{<br>　　$path = $upload-&gt;rootPath . $info[\'file\'][\'savepath\'] . $info[\'file\'][\'savename\'];<br>　　$image = new Image();<br>　　$image-&gt;open($path);<br>　　$image-&gt;thumb(200, 200, Image::IMAGE_THUMB_CENTER)-&gt;save($path);<br>　　$this-&gt;ajaxReturn(array(<br>　　\'url\' =&gt; U(\'/\', \'\', false, true) . \'upload/\' . $info[\'file\'][\'savepath\'] . $info[\'file\'][\'savename\']<br>　　));<br>　　}<br>　　}<br>　　使用时直接使用以下代码引入即可（示例代码在Application/Admin/View/Article/post.html中）：<br>　　由于回调函数已经写死了“uploadCallback”，所以目前来说该上传组件一个页面只能使用一个。<br>　　Admin模块比较重要的功能就是以上列出来的，其他功能基本上都是添加、编辑、列表、删除功能，由于篇幅关系这里不再赘述，有需要的读者可以前往github下载源码：<br>　　https://github.com/xialeistudio/thinkphp-inaction/tree/master/blog<br>　　12.6.2 Common模块<br>　　1. 分类处理<br>　　Common模块是公用模块，其他模块公用的功能可以放在该模块下，比如上文中的“文章-分类模型”就是公用Model，所以放在Common/Model下。<br>　　博客系统在设计文章分类时有“isNav”字段，该字段用来标识分类是否是导航栏中的分类，所以可以明确出来的需求有：<br>　　? 读取属于导航栏的分类（status为1）<br>　　? 读取不属于导航栏的分类（status为0）<br>　　? 读取全部分类<br>　　而以上需求返回值都是一致的，也就是分类列表，所以可以将以上三个需求封装成一个函数，根据传入的status来决定返回数据。<br>　　编辑Application/Common/Common/function.php，添加如下代码：<br>　　/**<br>　　* 获取分类<br>　　* @param int $isNav<br>　　* @return mixed<br>　　……<br><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">前言/序言</span></div>　　PHP是一种免费而且开源的开发语言，开源、跨平台、易于使用、学习门槛低的优点已经成为当前Web开发中的*佳编程语言。ThinkPHP作为快速、简单的面向对象的轻量级PHP开发框架，已经成长为国内*领先和*具影响力的Web应用开发框架，众多的典型案例确保可以稳定用于商业以及门户级的开发。<br>　　本书包括14个章节，作为学习ThinkPHP的6个阶段，从ThinkPHP入门到可以独立完成一个标准化的Web项目为止，所有内容都是当前Web开发中常用而且重要的内容，全书基于模块化的思想设计编写，可以帮助读者深刻理解ThinkPHP框架。本书全部知识点都以*新的ThinkPHP3.2.3版本为主，详细介绍了ThinkPHP极其相关的Web技术，可以帮助读者熟悉并掌握实用的ThinkPHP技术，其中包括当前比较流行的模版化网页布局、路由、缓存、多语言等主流技术，实用性非常强。本书所涉及的示例全部在服务器上运行通过，读者在学习和工作中，可以直接使用本书给出的一些示例。<br>　　本书编写的宗旨是让读者能够拥有一本ThinkPHP方面的学习和开发使用的书籍，本书力求对所涉及的知识点讲解到位，让读者可以轻松理解并掌握。对于几乎每个知识点都有可运行的代码配套，所有代码都有详尽的注释及说明。在大部分章节的*后都会结合一个实际用例，对该章知识进行归纳总结，能够帮助读者更好地掌握理论知识点，提高实际编程能力。<br>　　读者可以在开发中直接使用。对于本书有任何疑问，读者可以在github上面提问，笔者尽力及时回答读者提问，帮助读者提高编程能力，解决读者在开发中遇到的难题。<br>　　本书程序开发环境<br>　　操作系统：Windows 10企业版 64位操作系统<br>　　Web服务器：Apache 2.4.17<br>　　开发语言：PHP 5.5.30<br>　　数据库：MariaDB110.1.8 （读者可以用MySQL5.6、MySQL5.7替代）<br>　　集成环境：PHPStorm 10.0.3<br>　　ThinkPHP：ThinkPHP 3.2.3完整版<br>　　浏览器：Chrome 49.0.2618.8<br>　　本书适合读者<br>　　使用PHP+MySQL的Web网站开发人员<br>　　ThinkPHP MVC架构初学者<br>　　高等院校以及培训学校相关专业的师生<br>　　掌握PHP基础想深入学习的人员<br>　　本书由夏磊主笔编著。感谢清华大学出版社编辑夏毓彦及其他工作人员，他们的辛勤工作促成了本书的出版。<br>　　著者<br>　　2017年2月<br></div>', '0', '0');
INSERT INTO `product_detail` VALUES ('2', '3', '<div id=\"commDesc\" class=\"detail_pc strong_link\" hasdata=\"1\" style=\"\"><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">编辑推荐</span></div>　　<p>一本让你真正学会|用好Node高级技术的进阶读物</p>  <p><br>　　</p>  <p>本书精心组织115 个已通过测试的例子，并细致剖析保障这些Node应用良好运行的实用技术；采用提出问题/解决问题模式，囊括基于事件的编程、流、集成外部应用和发布等重要话题。</p>  <p>■  从基础到进阶的常见使用例子</p>  <p>■  设计和编写模块</p>  <p>■  测试和调试 Node 应用</p>  <p>■  Node 和现有的系统集成</p>  <p><br>　　</p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">内容简介</span></div>　　<p>《Node.js 硬实战：115 个核心技巧》是一本面向实战的Node.js 开发进阶指南。作为资深专家，《Node.js 硬实战：115 个核心技巧》作者独辟蹊径，将着眼点放在Node.js 的核心模块和网络应用，通过精心组织的丰富实例，向读者充分展示了Node.js 强大的并发处理能力，读者从中可真正掌握Node 的核心基础与高级技巧。《Node.js 硬实战：115 个核心技巧》总共有三部分内容，第一部分是Node.js 的基础核心，涉及Buffer、流、网络和进程等相关知识；第二部分是项目实践，涉及测试、Web 开发、调试，生产环境等重要话题；第三部分则完整创建了一个Node.js 模块。每部分涉及的技术都有详细讲解及注释详尽的示例代码，以帮助读者们更好地理解要点及其应用。</p>  <p>《Node.js 硬实战：115 个核心技巧》适合有一定JavaScript 基础，追求在Node.js 上更进一步的开发者。</p>  <p><br>　　</p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">作者简介</span></div><p>承竹，前支付宝前端开发工程师，现唯品会高级开发工程师。爱折腾，对计算机世界充满好奇，喜欢 JavaScript 语言，致力于成为一个理想中的靠谱软件工程师。徐佶辉，花名慕陶，08年开始工作，现任蚂蚁金服前端开发。在翻译《Node.js硬实战》这本书的过程中学到了很多，也深深发现这是本介绍node不可多得的好书。 </p> <p>Marc Harter 致力于构建大型项目，包括高可用的实时应用、流式接口和其他数据密集型系统。</p> <p>Young 是一位经验丰富的 JavaScript 开发者，定期在 DailyJS 博客发表文章。</p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">精彩书评</span></div>　　NULL<div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">目录</span></div><p>第一部分Node 基础</p> <p>1 入门. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2</p> <p>1.1 Node 入门3</p> <p>1.1.1 为什么使用Node 3</p> <p>1.1.2 Node 的主要特性5</p> <p>1.2 构建一个Node 应用7</p> <p>1.2.1 创建一个新的Node 项目8</p> <p>1.2.2 创建一个流的类9</p> <p>1.2.3 使用流10</p> <p>1.2.4 编写测试11</p> <p>1.3 总结13</p> <p>2 全局变量：Node 环境. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15</p> <p>2.1 模块16</p> <p>技巧1 安装与加载模块16</p> <p>技巧2 创建与管理模块17</p> <p>技巧3 加载一组相关的模块20</p> <p>技巧4 使用路径22</p> <p>2.2 标准I/O 以及console 对象23</p> <p>技巧5 标准I/O 流的读写24</p> <p>技巧6 打印日志消息25</p> <p>技巧7 基准测试27</p> <p>2.3 操作系统与命令行29</p> <p>技巧8 获取平台信息29</p> <p>技巧9 传递命令行参数30</p> <p>技巧10 退出程序31</p> <p>技巧11 响应信号量33</p> <p>2.4 使用timer 延迟执行35</p> <p>技巧12 通过setTimeout 延迟执行函数35</p> <p>技巧13 通过定时器定时调用回调函数37</p> <p>技巧14 安全的操作异步接口38</p> <p>2.5 总结41</p> <p>3 Buffers：使用比特、字节以及编码. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43</p> <p>3.1 修改数据编码44</p> <p>技巧15 Buffer 转换为其他格式44</p> <p>技巧16 使用Buffers 来修改字符串编码46</p> <p>3.2 二进制文件转换为JSON 49</p> <p>技巧17 使用Buffer 来转换原始数据49</p> <p>3.3 创建你自己的二进制协议65</p> <p>技巧18 创建自己的网络协议65</p> <p>3.4 总结71</p> <p>4 Events：玩转EventEmitter . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72</p> <p>4.1 基础用法73</p> <p>技巧19 从EventEmitter 继承73</p> <p>技巧20 混合EventEmitter 76</p> <p>4.2 异常处理78</p> <p>技巧21 管理异常78</p> <p>技巧22 通过domains 管理异常80</p> <p>4.3 高级模式82</p> <p>技巧23 反射82</p> <p>技巧24 探索EventEmitter 85</p> <p>技巧25 组织事件名称87</p> <p>4.4 第三方模块以及扩展88</p> <p>技巧26 EventEmitter 的替代方案89</p> <p>4.5 总结91</p> <p>5 流：最强大和最容易误解的功能. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93</p> <p>5.1 流的介绍94</p> <p>5.1.1 流的类型94</p> <p>5.1.2 什么时候使用流94</p> <p>5.1.3 历史95</p> <p>5.1.4 第三方模块中的流96</p> <p>5.1.5 流继承事件97</p> <p>5.2 内置流98</p> <p>技巧27 使用内置的流来实现静态web 服务器98</p> <p>技巧28 流的错误处理101</p> <p>5.3 第三方模块和流102</p> <p>技巧29 使用流的第三方模块102</p> <p>5.4 使用流基类105</p> <p>技巧30 正确地从流的基类继承105</p> <p>技巧31 实现一个可读流107</p> <p>技巧32 实现一个可写流111</p> <p>技巧33 使用双工流转换和接收数据113</p> <p>技巧34 使用转换流解析数据114</p> <p>5.5 高级模式和优化118</p> <p>技巧35 流的优化118</p> <p>技巧36 使用老的流API 121</p> <p>技巧37 基于功能的流适配123</p> <p>技巧38 测试流125</p> <p>5.6 总结128</p> <p>6 文件系统：通过异步和同步的方法处理文件. . . . . . . . . . . . . . . . . . . . . . . . . 129</p> <p>6.1 fs 模块概述130</p> <p>6.1.1 POSIX 文件系统包装器130</p> <p>6.1.2 流132</p> <p>6.1.3 批量文件操作133</p> <p>6.1.4 文件监视133</p> <p>6.1.5 同步的替代方案133</p> <p>技巧39 读取配置文件134</p> <p>技巧40 使用文件描述136</p> <p>技巧41 使用文件锁137</p> <p>技巧42 递归文件操作142</p> <p>技巧43 编写文件数据库147</p> <p>技巧44 监视文件以及文件夹151</p> <p>6.2 总结154</p> <p>7 网络：Node 真正的“Hello, World” . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 156</p> <p>7.1 Node 中的网络156</p> <p>7.1.1 网络技术157</p> <p>7.1.2 Node 网络模块161</p> <p>7.1.3 非阻塞网络和线程池162</p> <p>7.2 TCP 客户端和服务端163</p> <p>技巧45 创建TCP 服务端和客户端163</p> <p>技巧46 使用客户端测试TCP 服务端165</p> <p>技巧47 改进实时性低的应用168</p> <p>7.3 UDP 客户端和服务端170</p> <p>技巧48 通过UDP 传输文件170</p> <p>技巧49 UDP 客户端服务应用174</p> <p>7.4 HTTP 客户端和服务端179</p> <p>技巧50 HTTP 服务器179</p> <p>技巧51 重定向181</p> <p>技巧52 HTTP 代理186</p> <p>7.5 创建DNS 请求189</p> <p>技巧53 创建DNS 请求189</p> <p>7.6 加密191</p> <p>技巧54 一个加密的TCP 服务器192</p> <p>技巧55 加密的Web 服务器和客户端196</p> <p>7.7 总结198</p> <p>8 子进程：利用Node 整合外部应用程序. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 200</p> <p>8.1 执行外部应用程序202</p> <p>技巧56 执行外部应用程序202</p> <p>8.1.1 路径和Path 的环境变量203</p> <p>8.1.2 执行外部程序时候出现的异常204</p> <p>技巧57 流和外部应用程序205</p> <p>8.1.3 外部应用程序的串联调用206</p> <p>技巧58 在shell 中执行命令208</p> <p>8.1.4 安全性和shell 命令执行209</p> <p>技巧59 分离子进程210</p> <p>8.1.5 父进程和子进程之间的I/O 处理211</p> <p>8.1.6 引用计数和子进程213</p> <p>8.2 执行Node 程序213</p> <p>技巧60 执行Node 程序214</p> <p>技巧61 Forking Node 模块216</p> <p>技巧62 运行作业218</p> <p>8.2.1 工作池220</p> <p>8.2.2 使用池模块222</p> <p>8.3 同步运行223</p> <p>技巧63 同步子进程223</p> <p>8.4 总结227</p> <p>第二部分实践中的技巧</p> <p>9 网络：构建精简的网络应用. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 230</p> <p>9.1 前端技术231</p> <p>技巧64 快速的静态网站服务器231</p> <p>技巧65 在Node 中使用DOM 236</p> <p>技巧66 在浏览器端使用Node 模块238</p> <p>9.2 服务端技术241</p> <p>技巧67 Express 路由分离241</p> <p>技巧68 自动重启服务器245</p> <p>技巧69 配置web 应用248</p> <p>技巧70 优雅地处理错误253</p> <p>技巧71 RESTful web 应用257</p> <p>技巧72 使用自定义的中间件267</p> <p>技巧73 使用事件进行解耦273</p> <p>技巧74 使用WebSockets 来处理sessions 276</p> <p>技巧75 升级Express 3 到4 281</p> <p>9.3 web 应用程序的测试285</p> <p>技巧76 测试路由286</p> <p>技巧77 为中间件注入创建seams 288</p> <p>技巧78 测试依赖远程服务的应用291</p> <p>9.4 全栈框架297</p> <p>9.5 实时服务299</p> <p>9.6 总结300</p> <p>10 测试：编写健壮代码的关键. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 301</p> <p>10.1 Node 测试的相关介绍303</p> <p>10.2 使用断言编写简单的测试304</p> <p>技巧79 用内置的模块编写测试305</p> <p>技巧80 编写验证异常的测试308</p> <p>技巧81 创建自定义的断言312</p> <p>10.3 测试装置314</p> <p>技巧82 使用一个测试装置组织测试314</p> <p>10.4 测试框架318</p> <p>技巧83 使用Mocha 编写测试319</p> <p>技巧84 使用Mocha 测试web 应用323</p> <p>技巧85 万能测试协议（TAP） 328</p> <p>10.5 测试工具331</p> <p>技巧86 持续集成331</p> <p>技巧87 数据库装置335</p> <p>10.6 扩展阅读343</p> <p>10.7 总结343</p> <p>11 调试：用于发现和解决问题. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 344</p> <p>11.1 内省345</p> <p>11.1.1 显式异常345</p> <p>11.1.2 隐藏的异常346</p> <p>11.1.3 错误事件346</p> <p>11.1.4 错误参数347</p> <p>技巧88 处理未捕获的异常348</p> <p>技巧89 检查我们的Node 代码351</p> <p>11.2 问题的调试352</p> <p>技巧90 使用Node 内置的调试器352</p> <p>技巧91 使用Node Inspector 359</p> <p>技巧92 对Node 应用进行性能分析361</p> <p>技巧93 内存泄漏的调试365</p> <p>技巧94 使用REPL 来检测运行中的程序370</p> <p>技巧95 跟踪系统调用377</p> <p>11.3 总结381</p> <p>12 生产环境中的Node：安全地部署应用程序. . . . . . . . . . . . . . . . . . . . . . . . . . 382</p> <p>12.1 部署383</p> <p>技巧96 将Node 程序部署到云端383</p> <p>技巧97 使用Apache 和Ngnix 部署Node 程序389</p> <p>技巧98 在80 端口上安全地运行Node 程序392</p> <p>技巧99 保持Node 进程一直运行394</p> <p>技巧100 在生产环境中使用WebSockets 396</p> <p>12.2 Node 程序的缓存和扩展性402</p> <p>技巧101 HTTP 缓存402</p> <p>技巧102 为程序的路由和扩展使用Node 代理404</p> <p>技巧103 使用集群保持程序的扩展性和弹性408</p> <p>12.3 维护413</p> <p>技巧104 包的优化413</p> <p>技巧105 日志和日志服务415</p> <p>12.4 更多关于Node 程序的扩展性和弹性的备注418</p> <p>12.5 总结419</p> <p>第三部分编写模块</p> <p>13 编写模块，掌握Node 的所有. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 422</p> <p>13.1 头脑风暴424</p> <p>13.1.1 更快的斐波那契模块424</p> <p>技巧106 计划编写我们的模块425</p> <p>技巧107 验证我们模块的想法427</p> <p>13.2 创建package.json 文件433</p> <p>技巧108 创建package.json 文件433</p> <p>技巧109 依赖处理436</p> <p>技巧110 语义化版本号441</p> <p>13.3 用户体验444</p> <p>技巧111 添加可执行脚本444</p> <p>技巧112 在本地测试模块446</p> <p>技巧113 在不同版本Node 中测试448</p> <p>13.4 发布451</p> <p>技巧114 发布模块451</p> <p>技巧115 使用私有模块453</p> <p>13.5 总结455</p> <p>A 社区. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 457</p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">精彩书摘</span></div><p>译者序</p> <p>JavaScript 从它诞生以来就在浏览器应用中发挥着愈来愈重要的作用，同时，热爱JavaScript的人们一直在努力地将其应用在服务器领域。2009 年，Ryan Dahl 带来了Node.js，从那个时候开始，JavaScript 社区出现了前所未有的繁荣。现在，Node.js 对开发者来说，几乎已经是家喻户晓的了。对于传统的服务器端开发者们而言，Node.js 带来了浏览器端使用已久的异步编程相关的概念，而对于前端开发者们来说，Node.js 则是带来了编写服务端程序方面的挑战。当我们这些对Node.js 一知半解的开发者野心勃勃想要征服Node.js时，我们需要一个经验满满的导师来指引我们前行。</p> <p>我很幸运地有这样一个机会接触到这本书，并且承担起翻译的任务。我第一次阅读原著时就感觉，它是一本可以胜任Node.js 导师这个角色的书籍。作者认真负责地介绍了Node.js 相关的方方面面，并且附带了相当详细的例子来帮助读者快速地理解其中的要点。我相信，对于想要学习Node.js 的开发者来说，本书会是一个相当好的选择。翻译书的过程，也是一个学习的过程，原谅我们水平有限，书中翻译内容难免有疏漏。</p> <p>当这本书差不多翻译完成的时候，我发现已经用了好长的时间，Node.js 技术更新得相当快，我相信小部分内容的细节上和现在的应用可能会出现些许差异，还请读者们谅解。</p> <p>最后，在此对支持本书翻译工作的所有人们表示感谢，尤其是耐心容忍我们一再推迟交稿的编辑，真的非常感谢。</p> <p>衷心希望本书能够对您有所帮助，请享受Node.js 给您带来的一切，谢谢。</p> <p> </p> <p>序</p> <p>在你手中的是一本将带你进入了解Node 旅程的书。在接下来看到的页面中，Alex Young和Mare Harter 会帮助你深刻地把握Node 的核心模块、网络应用等。</p> <p>网络应用，是Node.js 光芒闪耀的地方。亲爱的读者，你可能已经很清楚这一点，我敢说，这就是你购买本书的原因！对于读了序的这少部分人，让我来告诉你们，这一切是如何开始的。</p> <p>在一开始的时候，有一个C10K 的问题，这个问题是这样的：如果你要在现代的硬件中处理10000 个并发连接，你会怎么做？</p> <p>你可以看到，操作系统处理大量的网络连接在持续很长一段时间里都是很糟糕的。硬件在很多方面很糟糕，软件在另外一些方面也很糟糕，当硬件和软件集成在一起的时候……语言学家暂时还没有合适的词语，单纯用糟糕来形容对这一切并不公平。幸运的是，技术是一个进步的故事，硬件越来越好，软件越来越智能。操作系统，如用户软件等，在管理大量的网络连接上有了很大的进步。</p> <p>在很久以前，我们征服了C10K 问题，现在目标转移了，我们已经把眼光投向了C100K、C500K、C1M 问题。一旦我们轻松地跨越这些界限时，我完全相信，C10M 会是下一个问题。</p> <p>Node.js 是这个并发性不断增长的故事的一部分，它的未来是光明的。我们生活在一个日益互联的世界，这个世界需要一个强大的工具来连接一切。我相信Node.js 会是那个强大的工具，我希望，在读完这本书时，你会有同样的感受。</p> <p>Ben Noordhuis</p> <p>Cofounder, StrongLoop, Inc.</p> <p> </p> <p>致谢</p> <p>我们要感谢很多人，没有他们的帮助和支持，这本书不可能完成。</p> <p>感谢Manning Early Access Program（MEAP）的在作者在线论坛发布评论和纠正的读者们。</p> <p>感谢那些在书的各个阶段提供了宝贵反馈意见的技术评审们：Alex Garrett、Brian Falk、Chris Joakim、Christoph Walcher、Daniel Bretoi、Dominic Pettifer、Dylan Scott、Fernando Monteiro Kobayashi、Gavin Whyte、Gregor Zurowski、Haytham Samad、JT Marshall、Kevin Baister、Luis Gutierrez、Michael Piscatello、Philippe Charrière、Rock Lee、Shiju Varghese和Todd Williams。</p> <p>感谢帮助我们每一步的Manning 团队，尤其是我们的开发编辑Cynthia Kane、编辑Benjamin Berg、校对Katie Tennant，以及其他在幕后工作的人们。</p> <p>特别感谢Ben Noordhuis 为本书写序，还有Valentin Crettaz 和Michael Levin 在书出版前仔细的技术校对。</p> <p>Alex Young</p> <p>如果没有DailyJS 社区的鼓励，我没法完成这样的一本书。感谢近几年来和我分享模块和类库的每一个人：没有你们就无法跟上Node.js 社区的脚步。同时也要感谢我的同事允许让我在生产环境中使用Node.js。最后，感谢Yuka 让我相信我自己可以从事创业和写书这些如此疯狂的事情。</p> <p>Marc Harter</p> <p>我要感谢Ben Noordhuis、Isaac Schlueter，还有Timothy Fontaine，为了他们关于Node 的各种IRC 讨论：你们了解底层系统，以一种深刻的方式支持和影响着Node，从你们身上我们获益匪浅。另外，我要感谢和我一起写书的Alex，似乎很难能有像我这样和Alex一起写书的机会，更加有趣的是他是一个在美国中西部的使用英语的人。最后我要感谢的是我的妻子，她让这一切变得可能，我由衷地说一句，你是如此可爱，谢谢你。</p> <p> </p> <p>关于本书</p> <p>《Node.js 硬实战》提供给读者来深入了解Node 的核心模块和包系统。我们相信这是成为一个多产和自信的Node 开发者的基础。不幸的是，因为巨大并且充满活力的第三方生态系统几乎为所有的任务提供了预置好的模块，所以小小的核心很容易被错过。在这本书中，我们在官方文档的基础上来进一步实践和深入。我们想要读者能够仔细分析和研究他们编写的项目以及项目所包含的第三方模块的内部工作。</p> <p>这本书不是一本Node 的入门级别的读物。入门的话，我们建议阅读Manning 的《Node实战》（Node.js In Action）。这本书的受众是那些对Node 有一定经验，正在寻求更进一步的读者。建议有一定的JavaScript 基础的读者，最好也熟悉Windows、OS X 或者Linux命令行的读者阅读。</p> <p>同时，我们注意到很多Node 开发者有来自客户端的JavaScript 开发背景。因此，我们会花一些时间来解释一些不大熟悉的概念，如处理二进制数据、底层网络和文件系统的工作，以及和主机操作系统进行交互——所有这些都使用Node 来作为教学指南。</p> <p>章节路线图</p> <p>这本书共分为三部分。</p> <p>第一部分包括了Node 的核心基础，我们关注于那些可能用到的Node 核心模块（非第三方模块）。第1 章简要概述了Node 的目的和意义。第2 到第8 章每一章内容会深入Node 核心的不同方面，从Buffers 到流，从网络到子进程。</p> <p>第二部分内容关注于真实世界的开发技巧。第9 到第12 章的内容，将帮助你掌握4 种非常实用的技能——测试、Web 开发、调试以及在生产环境运行Node。除了Node 核心模块之外，这些章节的内容也会包括许多第三方模块的使用。</p> <p>第三部分将指引你以一种直接的方式来创建自己的Node 模块，使用npm 命令的各种方法来处理打包、运行、测试、基准测试和共享模块。它同时也包括进行有效的项目版本化的有用提示。</p> <p>整本书有115 个技巧，每一部分包括了一个特定的Node.js 主题或者任务，包括了实际</p> <p>问题、解决方案和讨论部分。</p> <p>代码约定和下载</p> <p>在本书中的所有代码都是像这样的固定宽度的字体，如fixed-width font like this，以和周边其他文本内容区分开来。在很多列表中，代码中的关键概念会有相应的注解，带有编号的符号有时候可以帮助在文本中找到其他额外关于代码的有用信息。</p> <p>这本书的代码风格基于Google JavaScript 的编码风格1。这意味着我们把var 声明独立开来，使用驼峰式来命名函数和变量，并且通常都带分号。我们的风格是在Node 社区使用的多种JavaScript 代码风格的混合。</p> <p>大部分书中所示的代码可以以不同的形式在伴随着书的示例源代码中找到。示例源代码可以免费地从博文视点网站上下载：www.broadview.com.cn，也可以在Github 上关注：</p> <p>https://github.com/alexyoung/nodeinpractice。</p> <p>读者在线服务</p> <p>购买《Node.js 硬实战》并注册账号，你可以在上边对本书进行评论、提交勘误或者咨询问题，从编辑或者其他用户那里获得帮助。</p> <p> </p> <p>关于封面插图</p> <p>《Node.js 硬实战》的封面插图的标题是“来自Ayvalik 的年轻人”，Ayvalik 是在土耳其爱琴海岸的一个小镇。这个插图是从奥斯曼帝国在1802 年1 月1 日发布的伦敦Old Bond街的William Miller 创作的一系列服饰中获取的。标题页在整个集合中丢失了，我们已经无法追溯其日期。在书的内容表格中带有英文和法文标识，每个插图都有两位艺术家的名字。两百年之后，你一定会惊讶地发现，他们的艺术作品竟让计算机编程的书变得如此优雅、有魅力。</p> <p>这一图片系列是由Manning 的一位编辑在Manhattan 的西第二十六街Garage 的一个跳蚤市场购买的。卖家是一个在土耳其Ankara 的美国人，交易就发生在他正要收摊的时候。Manning 的编辑身上并没有足够的现金，信用卡和支票都被礼貌地拒绝了。当天晚上卖家就要坐飞机回Ankara，好像没有希望了。结果是怎么解决的？仅仅只是握手，一个老式的verbal 协议。卖家简单地提出将钱电汇给他就好，编辑带着一张写了银行信息的纸和胳膊下的公事包就走了。当然，第二天我们就把钱汇过去了。我们依旧很感谢这个陌生人对我们的信任。这是很久前的一段回忆。</p> <p>在Manning 的我们，为自己的创意和突破，以及基于带回来的两个世纪前的照片集的计算机书籍封面能如此丰富多彩而庆幸。</p> <p><br></p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">前言/序言</span></div><p>当Node 在2009 年出现的时候，我们知道有一些东西不一样了。在服务端JavaScript 并不是什么新鲜的东西。事实上，服务端的JavaScript 几乎和客户端的JavaScript 存在的时间一样长。Node 中，JavaScript 运行时的速度，再加上基于事件的并行，这些很多熟悉JavaScript 程序员都熟悉的东西，确实是让人感到不可抗拒。不仅仅是像我们这样背景的客户端JavaScript 开发者——Node 吸引了从系统层面到各种服务端开发、PHP、Ruby或者Java 的开发者们。我们都可以发现自己身处于这变化中。</p> <p>在那个时候，Node 有很多变化，我们受困于它，但是在这个过程中也学习了很多东西。从一开始，Node 关注于一个小的、低级别的核心库，来为大量多样化并且增长的用户提供足够的功能。值得庆幸的是，因为早期的一些设计决定，今天大量多样化的用户空间还存在着。Node 现在更加稳定，并且在许多初创企业和已成功企业生产环境中使用。</p> <p>当Manning 联系我们来编写一本中级的、关于Node 的书时，我们想到了在过去和常见陷阱做斗争时，以及在Node 社区中获得的经验教训。尽管我们非常喜欢那些提供给开发人员的大量真正优秀的第三方模块，但是，我们留意到越来越少的开发人员接触到Node 核心基础的教学。所以我们着手编写了《Node.js 硬实战》，来以一种深入和彻底的方式，探索Node 的根源和基础，并且解决很多我们个人遇见过的，或者看到他人处理过的问题。</p></div>', '0', '0');
INSERT INTO `product_detail` VALUES ('3', '4', '<div id=\"commDesc\" class=\"detail_pc strong_link\" hasdata=\"1\" style=\"\"><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">内容简介</span></div>　　《深入浅出Node.js》从不同的视角介绍了 Node 内在的特点和结构。由首章Node 介绍为索引，涉及Node 的各个方面，主要内容包含模块机制的揭示、异步I/O 实现原理的展现、异步编程的探讨、内存控制的介绍、二进制数据Buffer 的细节、Node 中的网络编程基础、Node 中的Web 开发、进程间的消息传递、Node 测试以及通过Node 构建产品需要的注意事项。附录介绍了Node 的安装、调试、编码规范和NPM 仓库等事宜。<br>　　《深入浅出Node.js》适合想深入了解 Node 的人员阅读。<div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">作者简介</span></div>朴灵，真名田永强，文艺型码农，就职于阿里巴巴数据平台，工程师，Node.js布道者，写了多篇文章介绍Node.js的细节。活跃于CNode社区，是线下会议NodeParty的组织者和JSConf China（沪JS和京JS）的组织者之一。热爱开源，多个Node.js模块的作者。<div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">内页插图</span></div><img src=\"//img13.360buyimg.com/bookDetail/g14/M07/09/04/rBEhVVK4_lYIAAAAAAHn8KBqLVcAAHR2gB3S4MAAegI919.jpg\" loaded=\"6\"><img src=\"//img11.360buyimg.com/bookDetail/g14/M07/09/04/rBEhVlK4_lYIAAAAAAKwRz1OwVoAAHR2gCCr64AArBf735.jpg\" loaded=\"5\"><img src=\"//img11.360buyimg.com/bookDetail/g14/M07/09/04/rBEhVVK4_lYIAAAAAAJ5joedXeEAAHR2gCnHSUAAnmm445.jpg\" loaded=\"4\"><img src=\"//img13.360buyimg.com/bookDetail/g14/M07/09/04/rBEhV1K4_lcIAAAAAAGfyejIhfgAAHR2gC7V7AAAZ_h174.jpg\" loaded=\"3\"><img src=\"//img12.360buyimg.com/bookDetail/g14/M07/09/04/rBEhV1K4_lcIAAAAAAGHl-LIa5gAAHR2gDL86IAAYev497.jpg\" loaded=\"2\"><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">精彩书评</span></div>　　Node.js让JavaScript在服务器端焕发生机，这是一本带着文艺调调的好看的技术书，书中详细阐述了Node.js的方方面面。如果你是前端工程师，这会是你迈向全端工程师的关键一步。<br>　　——玉伯，支付宝高级技术专家<br><br>　　通过学习Node.js，你可以接触到新的开发模式与协作思想。通过阅读这本书，你可以在软件开发领域获得广泛而又有深度的收获！所以，我很推荐这本书！<br>　　——庄表伟<br><br>　　从未读过这么让人想一翻到底的Node.js技术读物，看完 “内存控制”这一章后，重新写代码的时候，仿佛都能看到V8是如何进行垃圾回收的。如果你还在纠结callback带来的}}}}}}}嵌套问题，那么推荐你阅读“异步编程”这一章，保证让你大开眼界。世界上本没有嵌套回调，写的人多了，也便有了}}}}}}}。JavaScript已经不仅仅是在浏览器上运行的玩具语言, 它正在通过Node.js进军所有领域。<br>　　阅读本书，开启你人生的Node节点吧。<br>　　——Python发烧友，阿里巴巴数据平台技术专家<div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">目录</span></div>第1章　Node简介<br>1.1 　Node的诞生历程<br>1.2 　Node的命名与起源<br>1.2.1 　为什么是JavaScript<br>1.2.2 　为什么叫Node<br>1.3 　Node给JavaScript带来的意义<br>1.4 　Node的特点<br>1.4.1 　异步I/O<br>1.4.2 　事件与回调函数<br>1.4.3 　单线程<br>1.4.4 　跨平台<br>1.5 　Node的应用场景<br>1.5.1 　I/O密集型<br>1.5.2 　是否不擅长CPU密集型业务<br>1.5.3 　与遗留系统和平共处<br>1.5.4 　分布式应用<br>1.6 　Node的使用者<br>1.7 　参考资源<br><br>第2章　模块机制<br>2.1 　CommonJS规范<br>2.1.1 　CommonJS的出发点<br>2.1.2 　CommonJS的模块规范<br>2.2 　Node的模块实现<br>2.2.1 　优先从缓存加载<br>2.2.2 　路径分析和文件定位<br>2.2.3 　模块编译<br>2.3 　核心模块<br>2.3.1 　JavaScript核心模块的编译过程<br>2.3.2 　C/C++核心模块的编译过程<br>2.3.3 　核心模块的引入流程<br>2.3.4 　编写核心模块<br>2.4 　C/C++扩展模块<br>2.4.1 　前提条件<br>2.4.2 　C/C++扩展模块的编写<br>2.4.3 　C/C++扩展模块的编译<br>2.4.4 　C/C++扩展模块的加载<br>2.5 　模块调用栈<br>2.6 　包与NPM<br>2.6.1 　包结构<br>2.6.2 　包描述文件与NPM<br>2.6.3 　NPM常用功能<br>2.6.4 　局域NPM<br>2.6.5 　NPM潜在问题<br>2.7 　前后端共用模块<br>2.7.1 　模块的侧重点<br>2.7.2 　AMD规范<br>2.7.3 　CMD规范<br>2.7.4 　兼容多种模块规范<br>2.8 　总结<br>2.9 　参考资源<br><br>第3章　异步I/O<br>3.1 　为什么要异步I/O<br>3.1.1 　用户体验<br>3.1.2 　资源分配<br>3.2 　异步I/O实现现状<br>3.2.1 　异步I/O与非阻塞I/O<br>3.2.2 　理想的非阻塞异步I/O<br>3.2.3 　现实的异步I/O<br>3.3 　Node的异步I/O<br>3.3.1 　事件循环<br>3.3.2 　观察者<br>3.3.3 　请求对象<br>3.3.4 　执行回调<br>3.3.5 　小结<br>3.4 　非I/O的异步API<br>3.4.1 　定时器<br>3.4.2 　process.nextTick()<br>3.4.3 　setImmediate()<br>3.5 　事件驱动与高性能服务器<br>3.6 　总结<br>3.7 　参考资源<br><br>第4章　异步编程<br>4.1 　函数式编程<br>4.1.1 　高阶函数<br>4.1.2 　偏函数用法<br>4.2 　异步编程的优势与难点<br>4.2.1 　优势<br>4.2.2 　难点<br>4.3 　异步编程解决方案<br>4.3.1 　事件发布/订阅模式<br>4.3.2 　Promise/Deferred模式<br>4.3.3 　流程控制库<br>4.4 　异步并发控制<br>4.4.1 　bagpipe的解决方案<br>4.4.2 　async的解决方案<br>4.5 　总结<br>4.6 　参考资源<br><br>第5章　内存控制<br>5.1 　V8的垃圾回收机制与内存限制<br>5.1.1 　Node与V8<br>5.1.2 　V8的内存限制<br>5.1.3 　V8的对象分配<br>5.1.4 　V8的垃圾回收机制<br>5.1.5 　查看垃圾回收日志<br>5.2 　高效使用内存<br>5.2.1 　作用域<br>5.2.2 　闭包<br>5.2.3 　小结<br>5.3 　内存指标<br>5.3.1 　查看内存使用情况<br>5.3.2 　堆外内存<br>5.3.3 　小结<br>5.4 　内存泄漏<br>5.4.1 　慎将内存当做缓存<br>5.4.2 　关注队列状态<br>5.5 　内存泄漏排查<br>5.5.1 　node-heapdump<br>5.5.2 　node-memwatch<br>5.5.3 　小结<br>5.6 　大内存应用<br>5.7 　总结<br>5.8 　参考资源<br><br>第6章 　理解Buffer<br>6.1 　Buffer结构<br>6.1.1 　模块结构<br>6.1.2 　Buffer对象<br>6.1.3 　Buffer内存分配<br>6.2 　Buffer的转换<br>6.2.1 　字符串转Buffer<br>6.2.2 　Buffer转字符串<br>6.2.3 　Buffer不支持的编码类型<br>6.3 　Buffer的拼接<br>6.3.1 　乱码是如何产生的<br>6.3.2 　setEncoding()与string_decoder()<br>6.3.3 　正确拼接Buffer<br>6.4 　Buffer与性能<br>6.5 　总结<br>6.6 　参考资源<br><br>第7章　网络编程<br>7.1 　构建TCP服务<br>7.1.1 　TCP<br>7.1.2 　创建TCP服务器端<br>7.1.3 　TCP服务的事件<br>7.2 　构建UDP服务<br>7.2.1 　创建UDP套接字<br>7.2.2 　创建UDP服务器端<br>7.2.3 　创建UDP客户端<br>7.2.4 　UDP套接字事件<br>7.3 　构建HTTP服务<br>7.3.1 　HTTP<br>7.3.2 　http模块<br>7.3.3 　HTTP客户端<br>7.4 　构建WebSocket服务<br>7.4.1 　WebSocket握手<br>7.4.2 　WebSocket数据传输<br>7.4.3 　小结<br>7.5 　网络服务与安全<br>7.5.1 　TLS/SSL<br>7.5.2 　TLS服务<br>7.5.3 　HTTPS服务<br>7.6 　总结<br>7.7 　参考资源<br><br>第8章　构建Web应用<br>8.1 　基础功能<br>8.1.1 　请求方法<br>8.1.2 　路径解析<br>8.1.3 　查询字符串<br>8.1.4 　Cookie<br>8.1.5 　Session<br>8.1.6 　缓存<br>8.1.7 　Basic认证<br>8.2 　数据上传<br>8.2.1 　表单数据<br>8.2.2 　其他格式<br>8.2.3 　附件上传<br>8.2.4 　数据上传与安全<br>8.3 　路由解析<br>8.3.1 　文件路径型<br>8.3.2 　MVC<br>8.3.3 　RESTful<br>8.4 　中间件<br>8.4.1 　异常处理<br>8.4.2 　中间件与性能<br>8.4.3 　小结<br>8.5 　页面渲染<br>8.5.1 　内容响应<br>8.5.2 　视图渲染<br>8.5.3 　模板<br>8.5.4 　Bigpipe<br>8.6 　总结<br>8.7 　参考资源<br><br>第9章　玩转进程<br>9.1 　服务模型的变迁<br>9.1.1 　石器时代：同步<br>9.1.2 　青铜时代：复制进程<br>9.1.3 　白银时代：多线程<br>9.1.4 　黄金时代：事件驱动<br>9.2 　多进程架构<br>9.2.1 　创建子进程<br>9.2.2 　进程间通信<br>9.2.3 　句柄传递<br>9.2.4 　小结<br>9.3 　集群稳定之路<br>9.3.1 　进程事件<br>9.3.2 　自动重启<br>9.3.3 　负载均衡<br>9.3.4 　状态共享<br>9.4 　Cluster模块<br>9.4.1 　Cluster工作原理<br>9.4.2 　Cluster事件<br>9.5 　总结<br>9.6 　参考资源<br><br>第10章　测试<br>10.1 　单元测试<br>10.1.1 　单元测试的意义<br>10.1.2 　单元测试介绍<br>10.1.3 　工程化与自动化<br>10.1.4 　小结<br>10.2 　性能测试<br>10.2.1 　基准测试<br>10.2.2 　压力测试<br>10.2.3 　基准测试驱动开发<br>10.2.4 　测试数据与业务数据的转换<br>10.3 　总结<br>10.4 　参考资源<br><br>第11章　产品化<br>11.1 　项目工程化<br>11.1.1 　目录结构<br>11.1.2 　构建工具<br>11.1.3 　编码规范<br>11.1.4 　代码审查<br>11.2 　部署流程<br>11.2.1 　部署环境<br>11.2.2 　部署操作<br>11.3 　性能<br>11.3.1 　动静分离<br>11.3.2 　启用缓存<br>11.3.3 　多进程架构<br>11.3.4 　读写分离<br>11.4 　日志<br>11.4.1 　访问日志<br>11.4.2 　异常日志<br>11.4.3 　日志与数据库<br>11.4.4 　分割日志<br>11.4.5 　小结<br>11.5 　监控报警<br>11.5.1 　监控<br>11.5.2 　报警的实现<br>11.5.3 　监控系统的稳定性<br>11.6 　稳定性<br>11.7 　异构共存<br>11.8 　总结<br>11.9 　参考资源<br><br>附录A 　安装Node<br>A.1 　Windows系统下的Node安装<br>A.2 　Mac系统下Node的安装<br>A.3 　Linux系统下Node的安装<br>A.4 　总结<br>A.5 　参考资源<br>附录B 　调试Node<br>B.1 　Debugger<br>B.2 　Node Inspector<br>B.2.1 　安装Node Inspector<br>B.2.2 　错误堆栈<br>B.3 　总结<br>附录C 　Node编码规范<br>C.1 　根源<br>C.2 　编码规范<br>C.2.1 　空格与格式<br>C.2.2 　命名规范<br>C.2.3 　比较操作<br>C.2.4 　字面量<br>C.2.5 　作用域<br>C.2.6 　数组与对象<br>C.2.7 　异步<br>C.2.8 　类与模块<br>C.2.9 　注解规范<br>C.3 　最佳实践<br>C.3.1 　冲突的解决原则<br>C.3.2 　给编辑器设置检测工具<br>C.3.3 　版本控制中的hook<br>C.3.4 　持续集成<br>C.4 　总结<br>C.5 　参考资源<br>附录D 　搭建局域NPM仓库<br>D.1 　NPM仓库的安装<br>D.1.1 　安装Erlang和CouchDB<br>D.1.2 　搭建NPM仓库<br>D.2 　高阶应用<br>D.2.1 　镜像仓库<br>D.2.2 　私有模块应用<br>D.2.3 　纯私有仓库<br>D.3 　总结<br>D.4 　参考资源<div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">精彩书摘</span></div>　　1　Node简介 <br>　　Node应该是如今最火热的技术了，从本章开始，我们将逐步揭示它的诸多细节。 <br>　　1．1  Node的诞生历程 <br>　　NodelJ，3诞生历程如下所示。 <br>　　2009年3月，RyanDahl在其博客上宣布准备基于V8创建一个轻量级的Web务器并提供一套库。 <br>　　2009年5月，RyanDalai在GitHub上发布了最初的版本。 <br>　　2009年12月和2010年4月，两届JSConfJ（会都安排了Node的讲座。 <br>　　2010年年底，Node获得硅谷云计算服务商Joyent公司的资助，其创始人Joyent公司全职负责Node的发展。 <br>　　2011年7月，Node在微软的支持下发布了其Windows版本。 <br>　　2011年1lYl，Node超越RubyonRails，成为GitHub上关注度最高的项目（随后被Bootstrap项目超越，目前仍居第二）。 <br>　　2012年1月底，RyanDahl在~Node架构设计满意的情况下，将掌门人的身份转交给IsaacZ．Schlueter，自己转向一些研究项目。IsaacZSchlueter是Node的包管理器NPM的作者，之后Node的版本发布和bug修复等工作由他接手。截至笔者执笔之曰（2013年7月13日），发布的Node稳定版为v0．10．13，非稳定版为v0．11．4，NPM的官方模块数达到34943个，模块的周下载量为1479万次。 <br>　　随后，Node的发布计划主要集中在性能提升上，在v0．14之后，正式发布vI．O版本。 <br>　　1．2  Node的命名与起源 <br>　　在Node的官方网站之外，N0dc具有很多别称：Nodejs、NodeJS、Node．is等。本书在写作过程中遵循官方的说法，将会一直使用Node这个名字，但是在当前语境之外，为了与其余表示节点的技术或名词相区别，均可以带上is表明它是Node。在听到这些词汇时，应该意识到，它们说的是一码事。除了本书的封面和此处会用到N0dejs外，其余地方都会以Node作为正式称谓。 <br>　　Node名字的来由，其实跟它的起源是有密切关系的。 <br>　　1．2．1  为什么是JavaScript <br>　　RvanDahl是一名资深的C／C++程序员，在创造出N0de之前，他的主要工作都是围绕高性能we服务器进行的。经历过一些尝试和失败之后，他找到了设计高性能，WebH~务器的几个要点：事件驱动、非阻塞I／O。 <br>　　所以RvanDahl最初的目标是写一个基于事件驱动、非阻塞I／O的Web服务器，以达到更高的性能，提供Apache等服务器之外的选择。他提到，大多数人不设计一种更简单和更有效率的程序的主要原因是他们用到了阻塞I／O的库。写作Node的时候，RyanDahl~评估过C、Lua、Haskell、Ruby等语言作为备选实现，结论为：C的开发门槛高，可以预见不会有太多的开发者能将它用于日常的业务开发，所以舍弃它；RyanDahl觉得自己还不足够玩转Haskell，所以舍弃它；Lua自身已经含有很多阻塞I／0库，为其构建非阻塞I／O库也不能改变人们继续使用阻塞I／0库的习惯，所以也舍弃它；而Ruby的虚拟机由于性能不好而落选。 <br>　　相比之下，JavaSCriptt：gC的开发门槛要低，比Lua的历史包袱要少。尽管服务器端JavaScript存在已经很多年了，但是后端部分一直没有市场，可以说历史包袱为零，为其导人非阻塞I／0库没有额外阻力。另外，JavaScript4览器中有广泛的事件驱动方面的应用，暗合RyanDahl喜好基于事件驱动的需求。当时，第二次浏览器大战也渐渐分出高下，Chrome浏览器的JavaSCript引擎V8摘得性能第一的桂冠，而EL其基于新BSD许可证发布，自然受到RyanDahl的欢迎。考虑到高性能、符合事件驱动、没有历史包袱这3个主要原因．JavaScript成N（Node~J实现语言。 <br>　　1．2．2  为什么叫Node <br>　　起初，RyanDahl称他的项目为web．js，就是一个We服务器，但是项目的发展超过了他最初单纯开发一个Web服务器的想法，变成了构建网络应用的一个基础框架，这样可以在它的基础上构建更多的东西，诸如服务器、客户端、命令行工具等。Node为一个强制不共享任何资源的单线程、单进程系统，包含十分适宜网络的库，为构建大型分布式应用程序提供基础设施，其目标也是成为一个构建快速、可伸缩的网络应用平台。它自身非常简单，通过通信协议来组织许多N0de，非常容易通过扩展来达成构建大型网络应用的目的。每一个Node进程都构成这个网络应用中的一个节点，这是它名字所含意义的真谛 <br>　　……<div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">前言/序言</span></div>　　2006年至今，我们时常可以看到JavaScript的新闻，刚开始只是JavaScript引擎性能的提升，到后来发现很多是来自HTML5和Node创造的奇迹。如果只看表面，很容易让人感觉这又是一颗卫星。这种现象让人觉得不可信，所以出现了以下各种版本的误解。<br>　　Node肯定是几个前端工程师在实验室里捣鼓出来的。<br>　　为了后端而后端，有意思吗？<br>　　怎么又发明了一门新语言？<br>　　JavaScript承担的责任太重了。<br>　　直觉上，JavaScript不应该运行在后端。<br>　　前端工程师要逆袭了。<br>　　一方面，大家看到JavaScript在各个地方放出异彩，其他语言的开发者既羡慕它的成果，又担心它对当前所从事的语言造成冲击；另一方面，人们还是有JavaScript只能做前端脚本的定势思维。究其原因，还是因为人们缺乏历史观层次上的认知，所以会产生一些莫须有的惴惴不安。<br>　　1995年，JavaScript随网景公司发布的Netscape Navigator 2.0发布，它最早命名为LiveScript，随后更名为JavaScript。它出自如今的Mozilla公司的CTO——Brendan Eich之手，其产生来源于网景公司发布的Netscape Navigator浏览器需要一种脚本语言来协助浏览器做一些简单的动态操作。当时网景公司与Sun公司合作密切，不懂技术的管理层希望得到一个Java的脚本版语言，以期能像Java一样风靡。Brendan Eich原本进入网景公司是希望做Scheme语言的开发，但是却接到了一个不喜欢的任务，但迫于当时形势，不得不完成此事，于是JavaScript之父在10天的时间里仓促完成了JavaScript的设计，当时的项目代号是Mocha，名字叫LiveScript。<br>　　这门语言除了看起来像Java外，本质与Java语言相去甚远，管理层期望的Java Script其实借鉴了C、Scheme、Self、Java的设计。尽管仓促，但是这门语言还是借鉴了其他语言的不少优点，如函数式、原型链继承等。处于Java阴影下的这门语言获得了它最终的名字：JavaScript。至今，仍然还有许多人分不清Java与JavaScript的关系，就像分不清雷锋与雷峰塔一样。<br>　　虽然JavaScript的产生与Netscape Navigator浏览器的需求有关系，但它并非只是设计出来用于浏览器前端的。早在1994年，网景公司就公布了其Netscape Enterprise Server中的一种服务器端脚本实现，它的名字叫LiveWire，是最早的服务器端JavaScript，甚至早于浏览器中的JavaScript公布。对于这门图灵完备的语言，网景早就开始尝试将它用在后端。<br>　　随后，微软在第一次浏览器大战时，于1996年发布的IE 3.0中也包含了它的脚本语言：JScript。基于商标的原因，它叫JScript，但是与JavaScript兼容。在1997年年初，微软在它的服务器IIS 3.0中也包含了JScript，这就是我们在ASP中能使用的脚本语言。鉴于微软处处与网景针锋相对，出于保护自己的目的，网景公司推进了JavaScript的标准化进程，于1996年11月将JavaScript递交给ECMA国际标准组织，在1997年7月公布了第一个版本，是为ECMA-262号标准，又称ECMAScript。<br>　　可以看到，JavaScript一早就能运行在前后端，但风云变幻，在前后端各自的待遇却不尽相同。伴随着Java、PHP、.NET等服务器端技术的风靡，与前端浏览器中的JavaScript越来越重要相比，服务器端JavaScript逐渐式微。只剩下Rhino、SpiderMonkey用于工具。<br>　　然而，这个世界是变化的。第一次浏览器大战落幕后的JavaScript的世界有些平静，但依然在萌生一些变化。Google对Ajax的应用让JavaScript变得越来越重要。Firefox的发布掀起了对IE的反攻，迎来了第二次浏览器大战，竞争令JavaScript的性能不断提升，Chrome的加入令它高潮迭出。CommonJS规范的提出，不断在完善JavaScript。ECMAScript标准的不断推进，令语言更加精炼简洁，不停地去芜存菁。<br>　　浏览器端JavaScript在Web应用中盛行，甚至让人们忘掉了JavaScript可以在服务器端运行这码事。但是，服务器端JavaScript现在回来了，因为Node诞生了。Node的诞生离不开上述的历史契机，服务器端JavaScript在漫长的历史中长期停滞留下空白，但Node重新将这个领域激活。Ryan Dahl基于对高性能Web服务器的探索，无意间促成了服务器端JavaScript领域的焕然一新。Node凭借V8的高性能和异步I/O模型将JavaScript重新推向了一个高潮。现在，Node不仅满足JavaScript同时运行在前后端，而且性能还十分高效。与传统印象中的不同，它甚至可比于当前的高效脚本语言。<br>　　奇妙的反应还在继续，前后端要跨语言开发的现状已经开始改变，因为语言堆栈的不同，开发者的分工也进行了细分：前端工程师和后端工程师。专业技能因为分工而精进，但也将技能变为专利，似乎前端工程师不能进行后端开发，后端工程师搞不定前端开发，犹如树立的墙。但Node的出现令这种分工的界限又开始模糊了。同时一些后端工程师也关注到Node，他们甚至不关心前后端语言是否一致，而是赤裸裸地表示对Node高性能的垂涎，如实时、高并发等。<br>　　大量的前后端工程师加入了Node的开发阵营，GitHub上JavaScript是最活跃的开发语言，NPM社区第三方模块恐怖的增长速度和下载量都昭示着这个过程不可逆，在这里吼一声万能的NPM，总能找到你需要的解决方案。很多不断涌现的项目和创意都因为Node和前端开发能共用一种语言而独特。换言之，Node的本意是提供一个高性能的面向网络的执行平台，但无意间促成了JavaScript社区的繁荣，并进而形成强大的生态系统。<br>　　本书目的<br>　　目前，还没有一本书将Node自身结构介绍出来，大多停留在Node介绍或者框架、库的使用层面上，本书希望从不同的视角揭示Node自己内在的特点和结构。也许你已经用过Node进行相关的开发，在使用了Node带来的欣喜后，还能在阅读本书时，发出一句“哦，原来Node是这样的”，这就是本书的简单寄望。<br>　　对于Node初学者，目前市面上也已经有Node相关的入门书，它们可以快速地领你进入Node开发之旅。在了解了这些基本过程后，想了解更多Node知识的好奇心，会领你来阅读本书的。<br>　　阅读建议<br>　　本书并非完全按照顺序递进式介绍，如第2章是从代码组织结构看待Node，第3章是从运行结构看Node，第4章则是从编程结构看Node，第5章则是Node中内存结构的揭示，第6章谈及的是Node中的数据在I/O流中的结构或状态，第7章是Node在网络服务角度的介绍，第8章是Node在HTTP上的展现，第9章讨论了Node的单机集群结构，第10章是从单元测试和性能测试的角度去关注Node，第11章虽然已经脱离了Node编码的范畴，但是站在产品化的角度看待Node，也会颇有收获。<br>　　下面是各章的详细介绍。<br>　　第1章：这一章简要介绍了Node，从中可以了解Node的发展历程及其带来的影响和价值。<br>　　第2章：这一章介绍了Node的模块机制，从中可以了解到Node是如何实现CommonJS模块和包规范的。在这一章中，我们详细解释了模块在引用过程中的编译、加载规则。另外，我们还能读到更深度的关于Node自身源代码的组织架构。<br>　　第3章：这一章展示了在Node中我们将异步I/O作为主要设计理念的原因。另外，还会介绍到异步I/O的详细实现过程。<br>　　第4章：这一章主要介绍异步编程，其中有常见的异步编程问题介绍，也有详细的解决方案。在这一章中，我们可以接触到Promise、事件、高阶函数是如何进行流程控制的。<br>　　第5章：这一章主要介绍了Node中的内存控制，主要内容有垃圾回收、内存限制、查看内存、内存泄漏、大内存应用等细节。<br>　　第6章：这一章介绍了前端JavaScript里不能遇到的Buffer。由于Node中会涉及频繁的网络和磁盘I/O，处理字节流数据会是很常见的行为，这部分场景与纯粹的前端开发完全不同。<br>　　第7章：这一章介绍了Node支持的TCP、UDP、HTTP编程，还附赠了WebSocket与TLS、HTTPS的介绍。<br>　　第8章：这一章介绍了构建Web应用的过程中用到的大多数技术细节，如数据处理、路由、MVC、模板、RESTful等<br>　　第9章：这一章介绍了Node的多进程技术，以及如何借助多进程的方式来提升应用的可用性和性能。<br>　　第10章：这一章介绍了Node的单元测试和性能测试技巧。<br>　　第11章：“行百里者半九十”，完成产品开发的代码编写后，才完成了项目的第一步。这一章介绍了将Node产品化所需要注意到的细节，如项目工程化、代码部署、日志、性能、监控报警、稳定性、异构共存等。<br>　　附录A：详细介绍了Node的安装步骤。<br>　　附录B：讨论了Node的调试技巧。<br>　　附录C：探讨了团队实践或多人协作过程中需要关注的编码规范问题，它可以很好地规避一些低级的、明显的错误。<br>　　附录D：作为企业开发者，必须关注模块仓库的搭建管理。在这一章中，我们介绍了如何通过搭建私有NPM来解决企业隐私安全等方面的问题。<img item_init_src=\"//img14.360buyimg.com/bookDetail/jfs/t2647/61/2821343170/71003/88f34c06/57762325N6dfca269.jpg.dpg\" src=\"//wq.360buyimg.com/fd/h5/base/detail/images/transparent_a38f0a03.png\" alt=\"\"></div>', '0', '0');
INSERT INTO `product_detail` VALUES ('4', '5', '<div id=\"commDesc\" class=\"detail_pc strong_link\" hasdata=\"1\"><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">产品特色</span></div><p><img src=\"//img30.360buyimg.com/vc/jfs/t17017/68/1834177928/397614/c79f0c0a/5ad83a07N71701d87.jpg.dpg\" title=\"Laravel入门与实战：构建主流PHP应用开发框架-.jpg\" loaded=\"1\"></p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">内容简介</span></div><p>本书从基础开始详细地讲解了Laravel开发框架。本书对Laravel框架进行了系统的介绍，包括Laravel的背景、Laravel开发环境的搭建、路由与控制器、Blade模板、前端组件、收集和处理用户数据、Artisan和Tinker、数据库和Eloquent、容器、Laravel测试等知识。通过阅读本书，读者可以比较全面地学习并掌握Laravel开发的相关理论知识。另外，书中涵盖大量实例，更有利于读者在学习过程中不断实践。</p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">作者简介</span></div><p>Matt Stauffer，既是一名开发者，也是一位教师。他是Tighten Co. 和合伙人兼技术总监，主办过The Five-Minute Geek Show和Laravel Podcast。博客地址是//mattstauffer.co/。<br>韦玮，重庆韬翔网络科技有限公司董事长兼CEO，《精通Python网络爬虫》作者，CSDN特邀IT专家，51CTO学院特约专家讲师，《知道日报》特约作者，国家工信部高级网络营销师，蜻蜓FM**签约主播，国家专利发明人，多年IT从业经验，曾出品发明过多门IT课程并获得大量学员的支持与喜爱。</p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">目录</span></div><p>目录</p> <p><br></p> <p>前言 xxiii</p> <p><br></p> <p>第1章　为什么使用Laravel 1</p> <p>为什么要使用框架 1</p> <p>“自己动手做” 2</p> <p>一致性和灵活性 2</p> <p>Web 和PHP 框架的简史 2</p> <p>Ruby on Rail 2</p> <p>PHP 框架的涌入 3</p> <p>CodeIgniter 的优点与缺点 3</p> <p>Laravel 1、Laravel 2 和Laravel 3 3</p> <p>Laravel 4 4</p> <p>Laravel 5 4</p> <p>Laravel 有什么特别之处 4</p> <p>Laravel 的哲学 4</p> <p>Laravel 如何让开发者快乐 5</p> <p>Laravel 社区 6</p> <p>它是如何工作的 6</p> <p>为什么使用Laravel 9</p> <p><br></p> <p>第2章　搭建Laravel的开发环境 11</p> <p>系统要求 11</p> <p>Composer 11</p> <p>本地开发环境 12</p> <p>Laravel Valet 12</p> <p>Laravel Homestead 13</p> <p>创建一个新的Laravel项目 17</p> <p>使用Laravel安装工具来安装Laravel 17</p> <p>通过Composer 的create-project 来安装Laravel 17</p> <p>Laravel的目录结构 18</p> <p>文件夹 18</p> <p>文件 19</p> <p>配置 19</p> <p>启动和运行 20</p> <p>测试 21</p> <p>本章小结 21</p> <p><br></p> <p>第3章　路由和控制器 23</p> <p><br></p> <p>第4章　Blade模板 55<br><br>第5章　前端组件 73<br><br>第6章　收集和处理用户数据 91<br><br>第7章　Artisan和Tinker 109<br><br>第8章　数据库和Eloquent 127<br><br>第9章　用户认证和授权 193<br><br>第10章　请求和响应 221<br><br>第11章　容器 243<br><br>第12章　测试 257<br><br>第13章　编写API 281<br><br>第14章　存储和检索 313<br><br>第15章　邮件和通知 335<br><br>第16章　队列，任务，事件，广播及调度程序 353<br><br>第17章　助手和集合 387<br><br>词汇表 405</p><div class=\"p_desc_ptitle\"><span class=\"p_desc_ptitle_text\">前言/序言</span></div><p>译者序</p> <p>在Web 开发方面，相信大家对PHP 语言并不会感到陌生。是的，使用PHP 语言实现Web 应用开发确实非常便捷，正因如此，PHP 语言获得了大量Web 开发者的忠实拥护，译者也是其中之一。</p> <p>在开发过程中，如果能使用一款优秀的PHP 框架将会事半功倍。目前使用PHP 语言开发Web 项目通常有三种方案：使用原生PHP 代码（不基于框架）开发、基于框架开发以及基于框架并对框架进行二次开发。对大部分公司来说，开发效率这项指标是非常重要的，又因为框架实际上相当于项目的“半成品”，所以大部分公司可能更倾向于选择一款性能优越的PHP 框架，基于框架进行具体项目的开发。</p> <p>目前，可以选择的PHP 开发框架有很多，比如Laravel、ThinkPHP、Yii、CakePHP 等，这些框架各有千秋，但如果非要让译者在其中选择出一两款自己更喜欢的框架，那么应该是Laravel 与ThinkPHP。Laravel 框架性能较好，运行速度较快，适合开发中大型项目，在国际范围内都比较流行，但由于Laravel 框架是由国外研发的，所以目前可参考文献与资源在国内都比较匮乏。ThinkPHP 框架是国内研发的，性能同样也非常好，比较适合开发中小型项目，并且国内的可参考文献与资源相对较多。这两款框架都是非常优秀的PHP 开发框架，如果有时间，建议大家对这两款框架进行深入的研究。</p> <p>这本书主要对Laravel 框架进行了系统的介绍。包括Laravel 背景、Laravel 开发环境的搭建、路由与控制器、Blade 模板、前端组件、收集和处理用户数据、Artisan 和Tinker、数据库和Eloquent、用户认证和授权、请求和响应、容器、Laravel 测试、API 编写、存储与检索、邮件和通知、任务、队列、事件、广播及调度程序、助手和集合等。上面已经提到，Laravel 框架的相关学习资料比较匮乏，因此，衷心希望这本书出版后在一定程度上能够弥补这方面的空缺。</p> <p>有幸得到博文视点编辑孙奇俏老师的邀请，并在孙老师的监督下完成了本书的翻译与审校工作。但由于我公司事务繁忙，精力有限，所以邀请了我的学生黄梦颖与俞渺共同完成了本书的翻译工作。黄梦颖与俞渺都是非常优秀的高材生，都有过国外留学经历，黄梦颖同学现已获得了新加坡国立大学硕士学位，俞渺同学现已获得墨尔本大学硕士学位。</p> <p>翻译过程中，我负责正文第1 ～ 6 章翻译以及全书的审校工作，黄梦颖负责正文第7 ～10 章、第13 和14 章、前言、封底、词汇表、作者简介、封面简介等的翻译工作，俞渺负责正文第11 和12 章、第15 ～ 17 章的翻译工作。在此由衷感谢两位同学的艰苦付出，若读者在阅读过程中发现翻译文风略有不同，还请理解。</p> <p>本书关于Laravel 框架相关知识的介绍非常具体，如果你希望系统地学习并掌握Laravel框架，那么本书将非常适合你。当然，由于Laravel 属于PHP 语言众多框架中的一种，所以，大家在阅读本书之前最好先学习一些关于PHP 的基础知识，这样会更容易理解本书的内容。</p> <p>再次感谢孙奇俏老师的邀请，感谢本书编辑杨嘉媛，孙老师与杨编辑在本书的审稿与编加过程中付出了大量的精力与心血。感谢黄梦颖与俞渺对翻译做出的巨大贡献。感谢本书原作者Matt Stauffer 在写作过程中付出的巨大努力。感谢所有一直支持我的朋友们。</p> <p>感谢所有PHP 的忠实拥护者与Laravel 爱好者，谢谢你们的支持！</p> <p>韦玮</p> <p>2018 年1 月于上海</p> <p><br></p> <p>前言</p> <p>一个很常见的问题是，应该如何学习Laravel ？尽管已经写了很多年的PHP 程序，但是我不想闭门造车，我想更好地学习Rails 的强大特性，也想学习其他先进的Web 框架。</p> <p>Rails 有一个非常活跃的社区，完美结合了默认配置及其灵活性，并且具有Ruby Gems的能力来提高预包装的常用代码。</p> <p>我曾经也很犹豫是否要继续使用PHP，直到知道了Laravel，我才坚定信心。Laravel具备Rails 所有的特性，但它不仅仅是Rails 的一个副本，更是一个全新的Web 框架。</p> <p>Laravel 提供了非常完善的文档、开放的交流社区，还继承了许多现有的语言和框架。当我在博客和会议中分享Laravel 的学习经验时，我已经使用Laravel 开发了几十个应用程序和项目，并且可以在线或者面对面与成千上万名Laravel 开发者进行交流。我的工具箱中已经有很多种开发工具了，但是当打开命令行终端，输入laravel new project 时，我还是会感到非常激动。</p> <p>关于本书</p> <p>这并不是第一本关于Laravel 的书，也不会是最后一本。我不打算让它成为一本涵盖每一行代码或实现模式的书。我也并不希望它一定要与现在最新版本的Laravel 保持一致。</p> <p>相反，我编写本书的主要目的是提供一个高阶的概述和具体的例子，帮助开发者更快地学习Laravel。我希望能帮助读者理解Laravel 背后的基本概念，而不是单纯讲解文档。</p> <p>Laravel 是一个强大且灵活的PHP 框架。它拥有发展迅速的社区、丰富的开发工具，这些特性都让Laravel 越来越受欢迎。本书旨在帮助已经知道如何开发网站和应用程序的开发者学习如何在Laravel 中进行开发。</p> <p>Laravel 的官方文档非常清晰明了，如果读者对一些特定的内容感兴趣，但本书中又没有进行深入讲解，那么建议读者参考Laravel 的在线文档进行深入学习。</p> <p>本书不仅对知识点进行概述，也提供了相应的实例。在学习完本书后，相信读者便可以使用Laravel 从头开始实现一个完整的应用程序了。希望本书能激发大家动手操作的兴趣。</p> <p>目标读者</p> <p>读者要具备基本的面向对象编程基础，了解PHP（或者至少是C 语言的一般语法），以及模型- 视图- 控制器（MVC）开发模式和模板的基本概念。如果从来没有开发过网站，那么可能会觉得本书的内容比较难懂。但是只要有一定的编程基础，就不需要在阅读本书之前了解Laravel——我们会在本书中从“Hello, world!”开始，覆盖所有需要了解的内容。</p> <p>本书结构</p> <p>本书按照时间顺序编写：如果正在使用Laravel 构建第一个Web 应用程序，那么前面的章节将介绍开始时需要使用的基本组件，后面的章节将更深入地介绍知识点及对应的具体实例。</p> <p>本书的每一部分都可以单独阅读，但是也力图使章节之间的联系更加紧密，以便刚接触框架的读者能够从头到尾顺畅地进行阅读和学习。</p> <p>每章节的最后都包括“测试”和“本章小结（TL;DR）”，TL;DR 表示“长话短说”。这两部分将展示如何测试对应章节中讲过的方法，并对所涵盖的内容进行高阶概述。</p> <p>本书基于Laravel 5.3 版本，但是因为Laravel 5.1 是最新的LTS 版本，所以Laravel 5.2或Laravel 5.3 中的新功能将被标记出来。</p> <p><br></p></div>', '0', '0');

-- ----------------------------
-- Table structure for product_image
-- ----------------------------
DROP TABLE IF EXISTS `product_image`;
CREATE TABLE `product_image` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `url` varchar(255) NOT NULL,
  `product_id` int(10) unsigned NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=16 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of product_image
-- ----------------------------
INSERT INTO `product_image` VALUES ('1', 'https://img10.360buyimg.com/n1/jfs/t5134/102/158367023/109977/46ba081f/58f9dd89Nff920fa1.jpg', '1');
INSERT INTO `product_image` VALUES ('2', 'https://img10.360buyimg.com/n1/jfs/t4996/36/1944274465/136204/39a5cff7/58f5cac4N27f61fa6.jpg', '1');
INSERT INTO `product_image` VALUES ('3', 'https://img10.360buyimg.com/n1/jfs/t4960/142/1881973651/150172/e8f16763/58f5cac4N63bdd148.jpg', '1');
INSERT INTO `product_image` VALUES ('4', 'https://img10.360buyimg.com/n1/jfs/t4966/17/1910409570/133345/4bf78599/58f5cac4Neb9b91c0.jpg', '1');
INSERT INTO `product_image` VALUES ('5', 'https://img10.360buyimg.com/n1/jfs/t4423/81/3089139352/178099/4c6960a1/58f5cac4Ne53d5b8f.jpg', '1');
INSERT INTO `product_image` VALUES ('6', '//m.360buyimg.com/mobilecms/s750x750_jfs/t3154/275/4458168308/153672/a9b5507b/584839baN45eeec7b.jpg!q80.jpg.webp', '3');
INSERT INTO `product_image` VALUES ('7', '//m.360buyimg.com/mobilecms/s750x750_jfs/t6094/107/710811867/382815/4d54717/592bf165N755a88f0.jpg!q80.jpg.webp', '4');
INSERT INTO `product_image` VALUES ('8', '//m.360buyimg.com/mobilecms/s843x843_jfs/t1951/298/1428098602/192850/3fbc945b/569d9aa3Nff89de46.jpg!q70.dpg.webp', '4');
INSERT INTO `product_image` VALUES ('9', '//m.360buyimg.com/mobilecms/s843x843_jfs/t2527/143/1257004595/208240/60554872/569d9aa3Nfb60dde7.jpg!q70.dpg.webp', '4');
INSERT INTO `product_image` VALUES ('10', '//m.360buyimg.com/mobilecms/s843x843_jfs/t2464/66/2126801453/390108/d6db3f47/569d9aa3N7e9d89a3.jpg!q70.dpg.webp', '4');
INSERT INTO `product_image` VALUES ('11', '//m.360buyimg.com/mobilecms/s750x750_jfs/t19030/341/1140559169/235512/8d000d30/5abe08f8N8fd5f341.jpg!q80.jpg.webp', '5');
INSERT INTO `product_image` VALUES ('12', '//m.360buyimg.com/mobilecms/s843x843_jfs/t18796/14/1777615711/222460/b6b2641a/5ad82edcNc1fc441e.jpg!q70.dpg.webp', '5');
INSERT INTO `product_image` VALUES ('13', '//m.360buyimg.com/mobilecms/s843x843_jfs/t17839/360/1792602886/261145/d1e20991/5ad82ee3N65874641.jpg!q70.dpg.webp', '5');
INSERT INTO `product_image` VALUES ('14', '//m.360buyimg.com/mobilecms/s843x843_jfs/t18961/8/1729044424/206339/1a66381f/5ad82ee8N59fcd85e.jpg!q70.dpg.webp', '5');
INSERT INTO `product_image` VALUES ('15', '//m.360buyimg.com/mobilecms/s843x843_jfs/t16708/5/1825248582/180953/4760f401/5ad82eedN5613a986.jpg!q70.dpg.webp', '5');
